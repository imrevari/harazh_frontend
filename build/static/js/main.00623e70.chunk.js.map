{"version":3,"sources":["../node_modules/date-and-time/locale sync /^/.*$","components/ErrorPageDetail/ErrorPageDetail.js","common/Navbar.js","common/NavbarAdmin.js","common/NavbarUser.js","containers/Login/Login.js","components/ListOrderComponent/ListOrderComponentDetailed.js","containers/AdminMainPage/AdminMainPage.js","containers/MainPage/MainPage.js","containers/Logout/Logout.js","containers/AddCustomer/AddCustomer.js","common/PrivateRoute.js","common/PrivateRouteAdmin.js","containers/AddPart/AddPart.js","containers/PartsPage/PartsPage.js","components/ListPart/ListPartComponent.js","containers/PartList/PartList.js","components/Customer/ListCustomerComponent.js","containers/CustomerList/CustomerList.js","containers/CustomersPage/CustomersPage.js","components/Customer/ShowCustomer.js","containers/NewOrder/NewOrder.js","containers/CarsPage/CarsPage.js","containers/AddCar/AddCar.js","components/ListCar/ListCarComponent.js","containers/CarList/CarList.js","components/Customer/ShowCustomerInOrder.js","components/ListWorkForOrder/ListWorkForOrder.js","components/ListPartForOrder/ListPartForOrder.js","containers/Order/Order.js","containers/WorksPage/WorksPage.js","containers/AddWork/AddWork.js","containers/WorkList/WorkList.js","containers/AddCarPartToOrder/AddCarPartToOrder.js","containers/OrderOpenOrClosed/OrderOpenOrClosed.js","components/ListOrderComponent/ListOrderComponent.js","containers/OrderList/OrderList.js","containers/UsersPage/UsersPage.js","containers/AddUser/AddUser.js","components/ListUsers/ListUserComponent.js","containers/UsersList/UsersList.js","containers/MyPage/MyPage.js","containers/ChangePassword/ChangePassword.js","common/Layout.js","common/ErrorBoundry.js","App.js","index.js"],"names":["map","./ar","./ar.js","./az","./az.js","./bn","./bn.js","./cs","./cs.js","./de","./de.js","./dk","./dk.js","./el","./el.js","./es","./es.js","./fa","./fa.js","./fr","./fr.js","./hi","./hi.js","./hu","./hu.js","./id","./id.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ko","./ko.js","./my","./my.js","./nl","./nl.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt.js","./ro","./ro.js","./ru","./ru.js","./sr","./sr.js","./th","./th.js","./tr","./tr.js","./uk","./uk.js","./uz","./uz.js","./vi","./vi.js","./zh-cn","./zh-cn.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ErrorPageDetail","props","react_default","a","createElement","text","Notification","style","textAlign","Link","to","display","navbar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","navbarAdmin","user","navbarUser","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","value","isValid","message","password","registrationSaved","inputChangeHandler","event","updatedFromField","target","setState","defineProperty","name","validationHandler","error","updatedState","objectSpread","field","updatedFormElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","fieldErrors","Symbol","iterator","next","done","fieldError","err","return","postDataHandler","preventDefault","formData","formElementIdentifier","axios","get","auth","username","then","response","localStorage","setItem","JSON","stringify","data","history","push","catch","status","document","title","parse","getItem","onSubmit","onChange","Component","ListOrderComponentDetailed","car","date","format","Date","opened","isClosed","closed","total","toLocaleString","maximumFractionDigits","onClick","details","AdminMainPage","incoming","getLastTenOrders","totalToPay","works","partCounts","amountPayedInAdvance","item","workDone","price","retailPrice","amount","openOrder","_this2","listOfOrders","ListOrderComponent_ListOrderComponentDetailed","key","orderOpened","carMade","customer","firstName","lastName","myTable","border","MainPage","Logout","post","removeItem","NotificationManager","AddCustomer","newCustomerForm","telNumber","updatedCustomerForm","url","method","match","params","setTimeout","hideMessage","hasOwnProperty","emailSent","updatedCategoryForm","getCustomerByParamsId","updatedProductForm","goBack","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","PrivateRouteAdmin","role","AddPart","newPartForm","description","purchasePrice","getPartByParamsId","step","min","PartsPage","ListPartComponent","showDetails","showOrHide","juser","edit","delete","add","colSpan","desc","PartList","left","right","sorted","sortedFilteredList","fileteredBy","itemsToShow","beginIndex","endIndex","editPart","deletePart","console","log","addPart","sortMyList","updatableList","toConsumableArray","result","sort","b","toLowerCase","filterMyList","filter","includes","toUpperCase","iToShow","length","changeListSize","listSize","bIndex","listSizeInt","parseInt","eIndex","paginatorLeft","size","begIndexInt","endIndexInt","sizeInt","paginatorRight","newBegIndex","newBegIndexInt","getParts","listOfParts","slice","components_ListPart_ListPartComponent","header","placeholder","ListCustomerComponent","create","allOrders","CustomerList","editCustomer","deleteCustomer","addCustomer","createOrder","names","split","lName","fName","getCustomers","listOfCustomers","components_Customer_ListCustomerComponent","CustomersPage","ShowCustomer","NewOrder","orderId","customerIsPresent","carIsPresent","vinCode","licencePlate","problem","newCustomer","customerFromList","newCar","carFromList","getCustomerByParamId","cust","getCarByParamId","inputChangeHandlerOfProblem","inputChangeHandlerOfAmount","components_Customer_ShowCustomer","CarsPage","AddCar","newCarForm","updatedCarForm","getCarByParamsId","ListCarComponent","browser","CarList","fileteredByLicense","fileteredByCarMade","fileteredByVin","editCar","deleteCar","addCar","filterMyListByVin","filterMyListByCarMade","filterMyListByLicensePlate","getCars","detect","require","listOfCars","ListCar_ListCarComponent","substring","os","ShowCustomerInOrder","upper","ListWorkForOrder","changeUser","closeWork","remove","ListPartForOrder","totalPrice","Order","amountToPay","order","orderClosed","payedFor","sortedWork","sortedFilteredListWork","workFileteredBy","itemsToShowWork","workBeginIndex","workEndIndex","sortedPart","sortedFilteredListPart","partFileteredBy","itemsToShowPart","partBeginIndex","partEndIndex","calcTotalToPay","parts","preapid","calcTotalToPay2","ifAllWorksAreDone","filterMyWorkList","workName","filterMyPartList","partName","changeWorkListSize","changePartListSize","workPaginatorLeft","partPaginatorLeft","workPaginatorRight","partPaginatorRight","sortMyWorkList","userName","sortMyPartList","removePartCount","removeWork","addNewWork","payFor","closeOrder","alert","getReceipt","addCarPart","getOrderByParamsId","workBody","components_ListWorkForOrder_ListWorkForOrder","workBlock","partBody","components_ListPartForOrder_ListPartForOrder","partBlock","Customer_ShowCustomerInOrder","WorksPage","AddWork","newWorkForm","getWorkByParamsId","WorkList","editWork","deleteWork","addWork","idOfWork","getWorks","AddCarPartToOrder","part","newAmount","partId","disabled","OrderOpenOrClosed","openLink","closedLink","ListOrderComponent","OrderList","beginDate","endDate","closedOrders","setBegindDate","setEndDate","setStateFromResponseForCar","_name","_begDate","_endDate","setStateFromResponseForCustomer","getClosedOrdersbyCar","getOpenedOrdersbyCar","getClosedOrdersbyCustomer","getOpenedOrdersbyCustomer","components_ListOrderComponent_ListOrderComponent","date-inline-picker","UsersPage","AddUser","newUserForm","roles","inputChangedHandler","updatedUser","getUserByParamsId","entries","_ref2","slicedToArray","ListUserComponent","workId","select","report","UserList","editUser","deleteUser","selectUser","reportOfUser","filterMyListByName","getUsers","ListUsers_ListUserComponent","MyPage","ChangePassword","changePasswordForm","oldPassword","newPasswordCheck","newPassword","checkIfPasswordsMatch","password1","password2","postData","layout","NavbarAdmin","NavbarUser","Navbar","Switch","common_PrivateRouteAdmin","path","exact","common_PrivateRoute","components_ErrorPageDetail_ErrorPageDetail","ErrorBoundary","hasError","info","children","React","app","BrowserRouter","ErrorBoundry","Layout","defaults","baseURL","withCredentials","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.00623e70.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 30,\n\t\"./ar.js\": 30,\n\t\"./az\": 31,\n\t\"./az.js\": 31,\n\t\"./bn\": 32,\n\t\"./bn.js\": 32,\n\t\"./cs\": 33,\n\t\"./cs.js\": 33,\n\t\"./de\": 34,\n\t\"./de.js\": 34,\n\t\"./dk\": 35,\n\t\"./dk.js\": 35,\n\t\"./el\": 36,\n\t\"./el.js\": 36,\n\t\"./es\": 37,\n\t\"./es.js\": 37,\n\t\"./fa\": 38,\n\t\"./fa.js\": 38,\n\t\"./fr\": 39,\n\t\"./fr.js\": 39,\n\t\"./hi\": 40,\n\t\"./hi.js\": 40,\n\t\"./hu\": 41,\n\t\"./hu.js\": 41,\n\t\"./id\": 42,\n\t\"./id.js\": 42,\n\t\"./it\": 43,\n\t\"./it.js\": 43,\n\t\"./ja\": 44,\n\t\"./ja.js\": 44,\n\t\"./jv\": 45,\n\t\"./jv.js\": 45,\n\t\"./ko\": 46,\n\t\"./ko.js\": 46,\n\t\"./my\": 47,\n\t\"./my.js\": 47,\n\t\"./nl\": 48,\n\t\"./nl.js\": 48,\n\t\"./pa-in\": 49,\n\t\"./pa-in.js\": 49,\n\t\"./pl\": 50,\n\t\"./pl.js\": 50,\n\t\"./pt\": 51,\n\t\"./pt.js\": 51,\n\t\"./ro\": 52,\n\t\"./ro.js\": 52,\n\t\"./ru\": 53,\n\t\"./ru.js\": 53,\n\t\"./sr\": 54,\n\t\"./sr.js\": 54,\n\t\"./th\": 55,\n\t\"./th.js\": 55,\n\t\"./tr\": 56,\n\t\"./tr.js\": 56,\n\t\"./uk\": 57,\n\t\"./uk.js\": 57,\n\t\"./uz\": 58,\n\t\"./uz.js\": 58,\n\t\"./vi\": 59,\n\t\"./vi.js\": 59,\n\t\"./zh-cn\": 60,\n\t\"./zh-cn.js\": 60,\n\t\"./zh-tw\": 61,\n\t\"./zh-tw.js\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 100;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ErrorPageDetail = (props) => {\r\n\r\n    const Notification = (text) => {\r\n      // console.log(text)\r\n        switch(text) {\r\n          case 'Failed to execute \\'btoa\\' on \\'Window\\': The string to be encoded contains characters outside of the Latin1 range.':\r\n            return 'Логiн або/i пароль мож лиш латинськими буквами, нашими не мож';\r\n          case 'Network Error':\r\n            return 'Проблема з сеттю! Може зроби логaут i опять зайди';\r\n          case 'Request failed with status code 401':\r\n            return 'Доступ Запрещён!!!! Може зроби логaут i опять зайди';\r\n          case 'Request failed with status code 403':\r\n            return 'Ти шось мутиш!!!! Доступ Запрещён!!!! Ти не адмiн або не залогiнився.';\r\n          default:\r\n            return text;\r\n        }\r\n      }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2>Йойооой! Шось ся стало!</h2> \r\n            <hr/><br/>\r\n            <div>Бiзуно проблема в сьому:</div>\r\n            <div>{Notification(props.text)}</div>\r\n            <footer style={ { textAlign: \"right\"} }><Link to=\"/logout\" style={props.text === 'Request failed with status code 403' ? {display: 'none'} : {} }> logout </Link></footer> \r\n        </div>\r\n        \r\n        \r\n    )\r\n};\r\n\r\nexport default ErrorPageDetail;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst navbar = (props) =>(\n\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">ГАРАЖ </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\n                    aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">вход</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n\n);\n\nexport default navbar;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst navbarAdmin = (props) => (\n\n\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">ГАРАЖ - ADMIN</Link>\n            {/* {console.log( props.user)} */}\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\n                    aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/\">Закази</Link>\n                            <Link className=\"nav-link\" to=\"/customersPage\">Клiенти</Link>\n                            <Link className=\"nav-link\" to=\"/carsPage\">Машини</Link>\n                            <Link className=\"nav-link\" to=\"/partsPage\">Запчастi </Link>\n                            <Link className=\"nav-link\" to=\"/worksPage\">Роботи</Link>\n                            <Link className=\"nav-link\" to=\"/usersPage\">Пользователi</Link>\n                            <Link className=\"nav-link\" to=\"/logout\">Вийти</Link>\n                        </li>\n                    </ul>\n                    \n                    <ul className=\"navbar-nav ml-auto\">\n                        <li><Link className=\"nav-link\" to=\"/myPage\"><i className=\"\"></i>{props.user}</Link></li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n);\n\nexport default navbarAdmin;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst navbarUser = (props) =>(\n\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">ГАРАЖ </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\n                    aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/mainPage\">Закази</Link>\n                        <Link className=\"nav-link\" to=\"/customersPage\">Клiенти</Link>\n                        <Link className=\"nav-link\" to=\"/carsPage\">Машини</Link>\n                        <Link className=\"nav-link\" to=\"/logout\">Вийти</Link>\n                    </li>\n\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li><Link className=\"nav-link\" to=\"/myPage\"><i className=\"fas fa-shopping-cart\"></i> Моii даннi - {props.user}</Link></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n\n);\n\nexport default navbarUser;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        document.title = 'Login';\n    }\n\n    state = {\n        email: {\n            value: '',\n            isValid: true,\n            message: ''\n        },\n        password: {\n            value: '',\n            isValid: true,\n            message: ''\n        },\n        registrationSaved:{\n            value: false,\n            isValid: true,\n            message: ''\n        }\n\n    };\n\n    componentDidMount() {\n\n        const user = JSON.parse(localStorage.getItem('user'));\n\n        if (user) {\n            this.props.history.push('/');\n            // console.log(user);\n        }\n    }\n\n    inputChangeHandler = (event) => {\n        const updatedFromField = {};\n        updatedFromField.value = event.target.value;\n        updatedFromField.isValid = true;\n        this.setState({\n            [event.target.name]: updatedFromField\n        })\n    };\n\n    validationHandler = (error) => {\n        const updatedState = {\n            ...this.state\n        };\n\n        for (let field in this.state) {\n            const updatedFormElement = {\n                ...updatedState[field]\n            };\n            updatedFormElement.isValid = true;\n            updatedFormElement.message = '';\n            updatedState[field] = updatedFormElement;\n        }\n\n        for (let fieldError of error.fieldErrors) {\n            const updatedFormElement = {\n                ...updatedState[fieldError.field]\n            };\n            updatedFormElement.isValid = false;\n            updatedFormElement.message = fieldError.message;\n            updatedState[fieldError.field] = updatedFormElement;\n        }\n\n        this.setState(updatedState);\n    };\n\n    postDataHandler = (event) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state) {\n            formData[formElementIdentifier] = this.state[formElementIdentifier].value;\n        }\n\n        axios.get('/users/me', {\n            auth: {\n                username: this.state.email.value,\n                password: this.state.password.value\n            }\n        })\n            .then(response => {\n                //  console.log(response.data);\n                localStorage.setItem('user', JSON.stringify(response.data));\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                // console.log('error is ');\n                // console.log(error);\n                if (error.response && error.response.status === 401) {\n                    const errors = {\n                        fieldErrors: [\n                            {\n                                field: 'email',\n                                message: 'Не правильнi логiн i пароль'\n                            },\n                            {\n                                field: 'password',\n                                message: 'Не правильнi логiн i пароль'\n                            }\n                        ]\n                    };\n                    this.validationHandler(errors);\n                } else {\n                    this.setState(() => {\n                        throw error;\n                    })\n                }\n            });\n    };\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Вход у систему</h2>\n                <hr/>\n                <br/>\n                <form onSubmit={this.postDataHandler}>\n                    <div className={\"login-block\"}>\n                        <label\n                            className={this.state.email.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\n                            Iм'я:\n                        </label>\n                        <input\n                            className={this.state.email.isValid ? (this.state.registrationSaved.value ? \"form-control my-input-login-field is-saved\" : \"form-control my-input-login-field\") : \"form-control my-input-login-field is-invalid\"}\n                            type=\"text\"\n                            name=\"email\"\n                            value={this.state.email.value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <span className=\"form-text invalid-feedback\">{this.state.email.message}</span>\n                    </div>\n                    <div className={\"login-block\"}>\n                        <label\n                            className={this.state.password.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\n                            Пароль:\n                        </label>\n                        <input\n                            className={this.state.password.isValid ? ( \"form-control my-input-login-field\") : \"form-control my-input-login-field is-invalid\"}\n                            type=\"password\"\n                            name=\"password\"\n                            value={this.state.password.value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <br/>\n                        <div className=\"category-saved\">{this.state.registrationSaved.value && \"Registration was successful\"}</div>\n                        <span className=\"form-text invalid-feedback\">{this.state.password.message}</span>\n                    </div>\n                    <br/>\n                    <div>\n                        <button className=\"btn btn-success my-button\" type=\"submit\">Login</button>\n                    </div>\n\n\n                    <br/>\n                    <br/>\n\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\r\nimport date from 'date-and-time';\r\n\r\nclass ListOrderComponentDetailed extends Component{\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n           \r\n            <tr>\r\n                <td className=\"\"> {this.props.id} </td>\r\n                <td className=\"\"> {this.props.car} </td>\r\n                <td className=\"\"> {this.props.name} </td>\r\n                <td className=\"\" > {date.format(new Date(this.props.opened), 'DD. MM. YYYY. - HH:mm')  } </td>\r\n                <td className=\"\"  style={this.props.isClosed ? {} : {display: 'none'} } > {date.format(new Date(this.props.closed), 'DD. MM. YYYY. - HH:mm')  } </td>\r\n                <td className=\"\" > {this.props.total.toLocaleString(undefined, {maximumFractionDigits:2})}</td>\r\n                <td className=\"\" > <button   onClick={this.props.details}>Деталi</button> </td>\r\n            </tr> \r\n           \r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListOrderComponentDetailed;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ListOrderComponentDetailed from '../../components/ListOrderComponent/ListOrderComponentDetailed';\r\n\r\nclass AdminMainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Home';\r\n    }\r\n\r\n    state = {\r\n\r\n\r\n        incoming: []\r\n\r\n       \r\n    };\r\n\r\n    getLastTenOrders = () =>{\r\n        axios.get('/orders/')\r\n                    .then((response) => {\r\n                        // console.log(response.data)\r\n                        this.setState({incoming: response.data});\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n\r\n\r\n\r\n    }\r\n\r\n    totalToPay = (works, partCounts, amountPayedInAdvance) =>{\r\n        let total = 0;\r\n        total -= amountPayedInAdvance;\r\n\r\n        works.map(item =>{\r\n            if (item.workDone){\r\n                total += item.price;\r\n            }\r\n            return total;\r\n        })\r\n        partCounts.map(item =>{\r\n                total += (item.retailPrice * item.amount);\r\n                return total;      \r\n        })\r\n        \r\n       return total;\r\n    }\r\n\r\n    openOrder = (id) =>{\r\n        this.props.history.push(\"/order/\" + id);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getLastTenOrders();\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const listOfOrders = this.state.incoming.map( item => {\r\n\r\n            return (\r\n                <ListOrderComponentDetailed \r\n                    key={item.id}\r\n                    id={item.id}\r\n                    opened={item.orderOpened}\r\n                    details={() => this.openOrder(item.id)}\r\n                    total={this.totalToPay(item.works, item.partCounts, item.amountPayedInAdvance)}\r\n                    car={item.car.carMade}\r\n                    name={item.customer.firstName + ' ' + item.customer.lastName }\r\n                    \r\n                />\r\n            )\r\n        });\r\n\r\n        const myTable = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"\"  >Номер </th>\r\n                            <th className=\"\"  >Машина </th>\r\n                            <th className=\"\"  >Клiент </th>\r\n                            <th className=\"\"  >Одкритий </th>\r\n                            <th className=\"\"  >Довг </th>\r\n                            <th className=\"\" >Деталi</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listOfOrders} \r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>Главне меню адмiна</h1>\r\n\r\n                <hr/>\r\n             \r\n                        <div  >\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn-info my-button\">Найти заказ</button>\r\n                                </Link>\r\n                                 \r\n                                \r\n\r\n                               \r\n\r\n                        </div>\r\n\r\n                    \r\n\r\n                    <br/>\r\n\r\n                \r\n\r\n                        <div>\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn-info my-button\">Найти клiента</button>\r\n                                </Link>\r\n\r\n                                <Link to=\"/newCustomer\">\r\n                                    <button className=\"btn-success my-button\">Добавити клiента</button>\r\n                                </Link>\r\n                        </div>\r\n                \r\n                <hr/>\r\n                {myTable}   \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AdminMainPage;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ListOrderComponentDetailed from '../../components/ListOrderComponent/ListOrderComponentDetailed';\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Робота - Г а р а ж';\r\n    }\r\n\r\n\r\n    state = {\r\n\r\n\r\n        incoming: []\r\n\r\n       \r\n    };\r\n\r\n    getLastTenOrders = () =>{\r\n        axios.get('/orders/')\r\n                    .then((response) => {\r\n                        // console.log(response.data)\r\n                        this.setState({incoming: response.data});\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n\r\n\r\n\r\n    }\r\n\r\n    totalToPay = (works, partCounts, amountPayedInAdvance) =>{\r\n        let total = 0;\r\n        total -= amountPayedInAdvance;\r\n\r\n        works.map(item =>{\r\n            if (item.workDone){\r\n                total += item.price;\r\n            }\r\n            return total;\r\n        })\r\n        partCounts.map(item =>{\r\n                total += (item.retailPrice * item.amount);\r\n                return total;      \r\n        })\r\n        \r\n       return total;\r\n    }\r\n\r\n    openOrder = (id) =>{\r\n        this.props.history.push(\"/order/\" + id);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getLastTenOrders();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n\r\n\r\n        const listOfOrders = this.state.incoming.map( item => {\r\n\r\n            return (\r\n                <ListOrderComponentDetailed \r\n                    key={item.id}\r\n                    id={item.id}\r\n                    opened={item.orderOpened}\r\n                    details={() => this.openOrder(item.id)}\r\n                    total={this.totalToPay(item.works, item.partCounts, item.amountPayedInAdvance)}\r\n                    car={item.car.carMade}\r\n                    name={item.customer.firstName + ' ' + item.customer.lastName }\r\n                    \r\n                />\r\n            )\r\n        });\r\n\r\n        const myTable = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"\"  >Номер </th>\r\n                            <th className=\"\"  >Машина </th>\r\n                            <th className=\"\"  >Клiент </th>\r\n                            <th className=\"\"  >Одкритий </th>\r\n                            <th className=\"\"  >Довг </th>\r\n                            <th className=\"\" >Деталi</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listOfOrders} \r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>Главне меню</h1>\r\n\r\n                <hr/>\r\n             \r\n                        <div  >\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn-info my-button\">Найти заказ</button>\r\n                                </Link>\r\n                                 \r\n                                \r\n\r\n                                <Link to=\"/newOrder\">\r\n                                    <button className=\" btn-success my-button\">Створити заказ</button>\r\n                                </Link>\r\n\r\n                        </div>\r\n\r\n                    \r\n\r\n                    <br/>\r\n\r\n                \r\n\r\n                        <div>\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn-info my-button\">Найти клiента</button>\r\n                                </Link>\r\n\r\n                                <Link to=\"/newCustomer\">\r\n                                    <button className=\"btn-success my-button\">Добавити клiента</button>\r\n                                </Link>\r\n                        </div>\r\n                \r\n                <hr/>\r\n                {myTable}   \r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MainPage;","import {Component} from 'react'\nimport axios from \"axios\";\nimport {NotificationManager} from 'react-notifications';\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n        document.title = 'Logged out';\n    }\n\n    componentDidMount() {\n        axios.post('/logout')\n            .then(response => {\n                //  console.log(response);\n                localStorage.removeItem('user');\n                this.props.history.push('/');\n                NotificationManager.error(JSON.parse(response.data).message);\n            })\n            .catch(error => {\n                // console.log(error.response);\n                localStorage.removeItem('user');\n                this.setState(() => {\n                    throw error;\n                })\n            });\n    }\n\n    render() {\n        \n        return null;\n    }\n}\n\nexport default Logout;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass AddCustomer extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Новий Клiент - Г а р а ж';\r\n        // console.log(props);\r\n    }\r\n\r\n    state = {\r\n        newCustomerForm: {\r\n            firstName: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            lastName: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            telNumber: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            email: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            }\r\n        }\r\n    };\r\n\r\n    inputChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const updatedCustomerForm = {\r\n            ...this.state.newCustomerForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedCustomerForm[target.name]\r\n        };\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.isValid = true;\r\n        updatedCustomerForm[target.name] = updatedFormElement;\r\n\r\n        this.setState({...this.state, newCustomerForm: updatedCustomerForm});\r\n\r\n    };\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.newCustomerForm) {\r\n            formData[formElementIdentifier] = this.state.newCustomerForm[formElementIdentifier].value;\r\n        }\r\n\r\n\r\n        let url = '/';\r\n        let method = 'post';\r\n        const id = this.props.match.params.id;\r\n        const car = this.props.match.params.car;\r\n        if (id) {\r\n            url += id;\r\n            method = 'put';\r\n            formData[id] = id;\r\n        }\r\n\r\n        // console.log(method + ' ' + url);\r\n        // console.log(formData);\r\n\r\n\r\n        if(car){\r\n            axios({method: method, url: url, data: formData})\r\n            .then((response) => {\r\n                // console.log(response);\r\n                this.props.history.push('/newOrder/' + response.data.id + '/' + car);\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n        }else{\r\n            axios({method: method, url: url, data: formData})\r\n            .then(() => {\r\n                this.setState({\r\n                    newCustomerForm: {\r\n                        firstName: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        lastName: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        telNumber: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        email: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/customerList');\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        \r\n    };\r\n\r\n\r\n    hideMessage = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            emailSent: false\r\n        })\r\n    };\r\n\r\n    validationHandler = (error) => {\r\n        const updatedCategoryForm = {\r\n            ...this.state.newCustomerForm\r\n        };\r\n\r\n        for (let field in this.state.newCustomerForm) {\r\n            const updatedFormElement = {\r\n                ...updatedCategoryForm[field]\r\n            };\r\n            updatedFormElement.isValid = true;\r\n            updatedFormElement.message = '';\r\n            updatedCategoryForm[field] = updatedFormElement;\r\n        }\r\n\r\n        if (error.response.data.hasOwnProperty('fieldErrors')) {\r\n            for (let fieldError of error.response.data.fieldErrors) {\r\n                const updatedFormElement = {\r\n                    ...updatedCategoryForm[fieldError.field]\r\n                };\r\n                updatedFormElement.isValid = false;\r\n                updatedFormElement.message = fieldError.message;\r\n                updatedCategoryForm[fieldError.field] = updatedFormElement;\r\n            }\r\n\r\n            this.setState({...this.state, newCustomerForm: updatedCategoryForm});\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                newCustomerForm: {\r\n                    firstName: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Please don\\'t mess with my input fields'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    getCustomerByParamsId = () => {\r\n        axios.get('/' + this.props.match.params.id)\r\n            .then((response) => {\r\n                const updatedProductForm = {\r\n                    ...this.state.newCustomerForm\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    const updatedFormElement = {\r\n                        ...updatedProductForm[field]\r\n                    };\r\n                    updatedFormElement.value = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, newCustomerForm: updatedProductForm});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.match.params.id) {\r\n            this.getCustomerByParamsId();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2> {this.props.match.params.id != null ? \"Змiнити\" : \"Новий\"} Клiент{this.props.match.params.id != null ? \"а\" : \"\"}</h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newCustomerForm.firstName.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                            Iм'я:</label>\r\n                        <input\r\n                            className={this.state.newCustomerForm.firstName.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"firstName\"\r\n                            value={this.state.newCustomerForm.firstName.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newCustomerForm.firstName.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newCustomerForm.lastName.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>Фамiлiя:</label>\r\n                        <input\r\n                            className={this.state.newCustomerForm.lastName.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"lastName\"\r\n                            value={this.state.newCustomerForm.lastName.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newCustomerForm.lastName.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newCustomerForm.telNumber.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>Тел.:</label>\r\n                        <input\r\n                            className={this.state.newCustomerForm.telNumber.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            id=\"telNumber\"\r\n                            name=\"telNumber\"\r\n                            value={this.state.newCustomerForm.telNumber.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newCustomerForm.telNumber.message}</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newCustomerForm.email.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>email:</label>\r\n                        <input\r\n                            className={this.state.newCustomerForm.email.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={this.state.newCustomerForm.email.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newCustomerForm.email.message}</span>\r\n                    </div>\r\n                    \r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Сохранити</button>\r\n\r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n\r\n                   \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AddCustomer;","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={(props) => {\n        const user = JSON.parse(localStorage.getItem('user'));\n\n        return (\n            user\n                ? <Component {...props} />\n                : <Redirect to='/login'/>\n        )\n    }}\n    />\n);\n\nexport default PrivateRoute;","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\n\n\nconst PrivateRouteAdmin = ({component: Component, ...rest}) => (\n\n    <Route {...rest} render={(props) => {\n        const user = JSON.parse(localStorage.getItem('user'));\n\n        return (\n\n            user\n                ? ((user.role === 'ROLE_ADMIN')\n                ? <Component {...props} />\n                : <Redirect to='/mainPage'/>)\n                : <Redirect to='/login'/>\n\n        )\n    }}\n    />\n\n);\n\nexport default PrivateRouteAdmin;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass AddPart extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Нова запчасть - Г а р а ж';\r\n        // console.log(props);\r\n    }\r\n\r\n    state = {\r\n        newPartForm: {\r\n            name: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            retailPrice: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            purchasePrice: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    inputChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const updatedCustomerForm = {\r\n            ...this.state.newPartForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedCustomerForm[target.name]\r\n        };\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.isValid = true;\r\n        updatedCustomerForm[target.name] = updatedFormElement;\r\n\r\n        this.setState({...this.state, newPartForm: updatedCustomerForm});\r\n\r\n    };\r\n\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.newPartForm) {\r\n            formData[formElementIdentifier] = this.state.newPartForm[formElementIdentifier].value;\r\n        }\r\n\r\n        let url = '/parts';\r\n        let method = 'post';\r\n        const id = this.props.match.params.id;\r\n        if (id) {\r\n            url += '/' + id;\r\n            method = 'put';\r\n        }\r\n\r\n        axios({method: method, url: url, data: formData})\r\n            .then(() => {\r\n                this.setState({\r\n                    newPartForm: {\r\n                        name: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        description: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        retailPrice: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        purchasePrice: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/partsList');\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n    hideMessage = () => {\r\n        \r\n    };\r\n\r\n    validationHandler = (error) => {\r\n        const updatedCategoryForm = {\r\n            ...this.state.newPartForm\r\n        };\r\n\r\n        for (let field in this.state.newPartForm) {\r\n            const updatedFormElement = {\r\n                ...updatedCategoryForm[field]\r\n            };\r\n            updatedFormElement.isValid = true;\r\n            updatedFormElement.message = '';\r\n            updatedCategoryForm[field] = updatedFormElement;\r\n        }\r\n\r\n        if (error.response.data.hasOwnProperty('fieldErrors')) {\r\n            for (let fieldError of error.response.data.fieldErrors) {\r\n                const updatedFormElement = {\r\n                    ...updatedCategoryForm[fieldError.field]\r\n                };\r\n                updatedFormElement.isValid = false;\r\n                updatedFormElement.message = fieldError.message;\r\n                updatedCategoryForm[fieldError.field] = updatedFormElement;\r\n            }\r\n\r\n            this.setState({...this.state, newPartForm: updatedCategoryForm});\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                newPartForm: {\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Please don\\'t mess with my input fields'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    getPartByParamsId = () => {\r\n        axios.get('/parts/id/' + this.props.match.params.id)\r\n            .then((response) => {\r\n                const updatedProductForm = {\r\n                    ...this.state.newPartForm\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    const updatedFormElement = {\r\n                        ...updatedProductForm[field]\r\n                    };\r\n                    updatedFormElement.value = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, newPartForm: updatedProductForm});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.match.params.id) {\r\n            this.getPartByParamsId();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2> {this.props.match.params.id != null ? \"Змiнити\" : \"Нова\"}  Запчасть</h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newPartForm.name.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                        Назва запчастi:</label>\r\n                        <input\r\n                            className={this.state.newPartForm.name.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"name\"\r\n                            value={this.state.newPartForm.name.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newPartForm.name.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newPartForm.description.isValid ? \"control-label textarea-lable\" : \"control-label input-label invalid-label\"}>Описанiе:</label>\r\n                        {/* <input\r\n                            className={this.state.newPartForm.description.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"description\"\r\n                            value={this.state.newPartForm.description.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        /> */}\r\n                        <textarea className={\"my-textarea\"}\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            value={this.state.newPartForm.description.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newPartForm.description.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group \">\r\n                        <label\r\n                            className={this.state.newPartForm.retailPrice.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>Продажна цiна:</label>\r\n                        <input\r\n                            className={this.state.newPartForm.retailPrice.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0.01\"\r\n                            id=\"retailPrice\"\r\n                            name=\"retailPrice\"\r\n                            value={this.state.newPartForm.retailPrice.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newPartForm.retailPrice.message}</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newPartForm.purchasePrice.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>Закупочна цына:</label>\r\n                        <input\r\n                            className={this.state.newPartForm.purchasePrice.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0.01\"\r\n                            id=\"purchasePrice\"\r\n                            name=\"purchasePrice\"\r\n                            value={this.state.newPartForm.purchasePrice.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newPartForm.purchasePrice.message}</span>\r\n                    </div>\r\n                    \r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Сохранити</button>\r\n\r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AddPart;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass PartsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Робота - Г а р а ж';\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Запчасты</h1>\r\n\r\n             \r\n                        <div  >\r\n                                <Link to=\"/addPart\">\r\n                                    <button className=\"btn-success my-button\">Свторити запчасть</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/partsList\">\r\n                                    <button className=\" btn-success my-button \">Список запчастей</button>\r\n                                </Link>\r\n                        </div>\r\n                    \r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/\">\r\n                                    <button className=\" btn-success my-button \">Найти запчасть</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PartsPage;","import React, {Component} from 'react';\r\nimport './ListPartComponent.css'\r\n\r\n\r\nclass ListPartComponent extends Component{\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     // console.log(props);\r\n    // }\r\n\r\n    state = {\r\n        showDetails: false\r\n    };\r\n\r\n    showOrHide = () => {\r\n        const showOrHide = this.state.showDetails\r\n\r\n        this.setState({...this.state, showDetails: !showOrHide});\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n           \r\n            <table border=\"1\" >\r\n            <tbody>\r\n            <tr>\r\n                <td className=\"n\" onClick={this.showOrHide}>{this.props.name}</td>\r\n                <td className=\"p\" onClick={this.showOrHide}>{this.props.price}</td>\r\n                <td className=\"edit\" style={this.props.juser.role === 'ROLE_USER' ? {display: 'none'} : {}} > <button onClick={this.props.edit}>Iзмiнити</button> </td>\r\n                <td className=\"delete\" style={this.props.juser.role === 'ROLE_USER' ? {display: 'none'} : {}}> <button onClick={this.props.delete}>Удалити</button> </td>\r\n                <td className=\"add\" style={this.props.juser.role === 'ROLE_USER' ? {} : {display: 'none'}}>\r\n                      <button   onClick={this.props.add}>Добавити</button> </td>\r\n            </tr> \r\n\r\n            <tr  className={this.state.showDetails ? \"\" : \"toHide\"}  >\r\n                <td colSpan={this.props.juser.role === 'ROLE_USER' ? \"3\" : \"4\"} > {this.props.desc}</td>\r\n\r\n            </tr>\r\n            </tbody>\r\n\r\n            </table>\r\n\r\n\r\n           \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ListPartComponent;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ListPartComponent from '../../components/ListPart/ListPartComponent'\r\n\r\nimport '../../components/ListPart/ListPartComponent.css'\r\n\r\n\r\nclass PartList extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Запчастi - Г а р а ж';\r\n        // console.log(props);\r\n    }\r\n\r\n    left = '<<<';\r\n    right = '>>>'\r\n\r\n    state = {\r\n\r\n        sorted: '',\r\n\r\n        incoming: [],\r\n\r\n        sortedFilteredList: [],\r\n\r\n        fileteredBy: '',\r\n\r\n        itemsToShow: 10,\r\n\r\n        beginIndex: 0,\r\n\r\n        endIndex: 10\r\n    };\r\n   \r\n    editPart = (id) => {\r\n       // console.log('editing ' + id);\r\n        this.props.history.push(\"/editPart/\" + id);\r\n    }\r\n\r\n    deletePart = (id) =>{ \r\n        console.log('deleting ' + id);\r\n    }\r\n\r\n    addPart = (id) =>{ \r\n        // console.log('adding ' + id);\r\n        this.props.history.push(\"/addCarPartCout/\" + this.props.match.params.id + '/' + id);\r\n    }\r\n\r\n    sortMyList = (type) => {\r\n     //   console.log('sorting by ' + type)\r\n        var updatableList = [...this.state.sortedFilteredList];\r\n\r\n       \r\n        if (type === 'name' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n            const result = updatableList.sort((a, b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n                sorted: 'asc' , \r\n                sortedFilteredList: result });\r\n\r\n        }\r\n\r\n        if (type === 'name' && this.state.sorted === 'asc' ){\r\n            const result = updatableList.sort((a, b) => (a.name.toLowerCase() < b.name.toLowerCase()) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n                sorted: 'desc' , \r\n                sortedFilteredList: result });\r\n\r\n        }\r\n\r\n        if (type === 'retailPrice' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n            const result = updatableList.sort((a, b) => (a.retailPrice > b.retailPrice) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n                sorted: 'asc' , \r\n                sortedFilteredList: result });\r\n\r\n        }\r\n\r\n        if (type === 'retailPrice' && this.state.sorted === 'asc' ){\r\n            const result = updatableList.sort((a, b) => (a.retailPrice < b.retailPrice) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n                sorted: 'desc' , \r\n                sortedFilteredList: result });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    filterMyList = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.name.includes(value) ||\r\n         item.name.toLowerCase().includes(value) || item.name.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state, \r\n            fileteredBy: value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n    changeListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShow: value});\r\n        }\r\n    }\r\n\r\n    paginatorLeft = () => {\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                beginIndex: 0,\r\n                endIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    paginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.endIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                beginIndex: newBegIndexInt,\r\n                endIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n    getParts = () => {\r\n\r\n        axios.get('/parts')\r\n            .then(response => {\r\n               // console.log(response);\r\n                this.setState({incoming: response.data,\r\n                    sortedFilteredList: response.data});\r\n            })\r\n            .catch(error => {\r\n                // console.log('hello' + error);\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n                // this.props.history.push('/login');\r\n            })\r\n    };\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getParts();\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const juser = JSON.parse(localStorage.getItem('user'));\r\n\r\n        const listOfParts = this.state.sortedFilteredList.slice(this.state.beginIndex, this.state.endIndex).map( item => {\r\n\r\n            return (\r\n           \r\n                <ListPartComponent \r\n                    key={item.id}\r\n                    name={item.name}\r\n                    desc={item.description}\r\n                    price={item.retailPrice}\r\n                    edit={() => this.editPart(item.id)}\r\n                    delete={() => this.deletePart(item.id)}\r\n                    juser={juser}\r\n                    add={() => this.addPart(item.id)}\r\n                />\r\n            )\r\n        });\r\n\r\n        const header = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"n\"  onClick={() => this.sortMyList('name')}>Назва &#8645;</th>\r\n                            <th className=\"p\" onClick={() => this.sortMyList('retailPrice')}>цiна &#8645;</th>\r\n                            <th className=\"edit\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}} ></th>\r\n                            <th className=\"delete\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}}></th>\r\n                            <th className=\"add\" style={juser.role === 'ROLE_USER' ? {} : {display: 'none'}}></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"form-group\">\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.fileteredBy}\r\n                                    onChange={this.filterMyList}\r\n                                    placeholder={'Find By'}\r\n                                />\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShow}\r\n                                    onChange={this.changeListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                  \r\n                </div>\r\n                {header}\r\n                {listOfParts}\r\n\r\n                <br/>\r\n                \r\n                <div >\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.paginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.beginIndex + 1} - {this.state.endIndex}</strong>\r\n                    <strong onClick={this.paginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    };\r\n\r\n   \r\n\r\n\r\n}\r\n\r\nexport default PartList;","import React, {Component} from 'react';\r\nimport './ListCustomerComponent.css'\r\n\r\nclass ListCustomerComponent extends Component{\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     // console.log(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n                 \r\n            <tr>\r\n                <td className=\"name\">{this.props.name}</td>\r\n                <td className=\"telNumber\">{this.props.telNumber}</td>\r\n                <td className=\"edite\" style={this.props.juser.role === 'ROLE_USER' ? {display: 'none'} : {}}> <button onClick={this.props.edit}>Iзмiнити</button> </td>\r\n                <td className=\"delete\" style={this.props.juser.role === 'ROLE_USER' ? {display: 'none'} : {}}> <button onClick={this.props.delete}>Удалити</button> </td>\r\n                <td className=\"add\" style={\r\n                    this.props.juser.role === 'ROLE_USER' ? \r\n                    (this.props.car === undefined ?  {display: 'none'} : {}) \r\n                    : {display: 'none'}\r\n                    }>  <button   onClick={this.props.add}>Додати</button> </td>\r\n                <td className=\"create\" style={\r\n                    this.props.juser.role === 'ROLE_USER' ? \r\n                    (this.props.car === undefined ?  {} : {display: 'none'}) \r\n                    : {display: 'none'}\r\n                    }>  <button   onClick={this.props.create}>Новий заказ</button> </td>\r\n                <td className=\"allOrders\" style={\r\n                    this.props.car === undefined ?  {} : {display: 'none'} \r\n                    }>  <button   onClick={this.props.allOrders}>Предидущi закази</button> </td>\r\n            </tr> \r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ListCustomerComponent;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ListCustomerComponent from '../../components/Customer/ListCustomerComponent'\r\nimport '../../components/Customer/ListCustomerComponent.css'\r\n\r\n\r\nclass CustomerList extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Клiенти - Г а р а ж';\r\n        // console.log(props);\r\n    }\r\n\r\n    left = '<<<';\r\n    right = '>>>'\r\n\r\n    state = {\r\n\r\n        sorted: '',\r\n\r\n        incoming: [],\r\n\r\n        sortedFilteredList: [],\r\n\r\n        fileteredBy: '',\r\n\r\n        itemsToShow: 10,\r\n\r\n        beginIndex: 0,\r\n\r\n        endIndex: 10\r\n    };\r\n\r\n    editCustomer = (id) =>{ \r\n        // console.log('editing ' + id);\r\n        this.props.history.push(\"/editCustomer/\" + id);\r\n    }\r\n\r\n    deleteCustomer = (id) =>{ \r\n        //TODO to be done\r\n        console.log('deleting ' + id);\r\n    }\r\n\r\n    addCustomer = (id) =>{\r\n        this.props.history.push(\"/newOrder/\" + id + \"/\" + this.props.match.params.car); \r\n        // console.log('adding ' + id);\r\n    }\r\n\r\n    createOrder = (id) =>{ \r\n        // console.log('creating order for ' + id);\r\n        this.props.history.push(\"/newOrder/\" + id + \"/0\");\r\n    }\r\n\r\n    allOrders = (id) =>{\r\n        // console.log('orders of ' + id);\r\n        this.props.history.push(\"/openOrder/x/\" + id);\r\n    }\r\n\r\n    sortMyList = () => {\r\n\r\n           var updatableList = [...this.state.sortedFilteredList];\r\n   \r\n           if (this.state.sorted === '' || this.state.sorted === 'desc'){\r\n               const result = updatableList.sort((a, b) => (a.lastName.toLowerCase() > b.lastName.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.lastName.toLowerCase() < b.lastName.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n       }\r\n\r\n    filterMyList = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        let names = value.split(' ', 3);\r\n\r\n        const lName = names[0];\r\n        const fName = names[1];\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.firstName.includes(value) ||\r\n         item.firstName.toLowerCase().includes(value) || \r\n         item.firstName.toUpperCase().includes(value) ||\r\n         item.lastName.includes(value) ||\r\n         item.lastName.toLowerCase().includes(value) || \r\n         item.lastName.toUpperCase().includes(value) ||\r\n         \r\n         (item.firstName.includes(fName) && item.lastName.includes(lName)) || \r\n         (item.firstName.toLowerCase().includes(fName) && item.lastName.toLowerCase().includes(lName)) || \r\n         (item.firstName.toUpperCase().includes(fName) && item.lastName.toUpperCase().includes(lName)) || \r\n         \r\n         (item.firstName.includes(lName) && item.lastName.includes(fName)) || \r\n         (item.firstName.toLowerCase().includes(lName) && item.lastName.toLowerCase().includes(fName)) || \r\n         (item.firstName.toUpperCase().includes(lName) && item.lastName.toUpperCase().includes(fName))\r\n         );\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state, \r\n            fileteredBy: value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n    changeListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShow: value});\r\n        }\r\n    }\r\n\r\n    paginatorLeft = () => {\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                beginIndex: 0,\r\n                endIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    paginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.endIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                beginIndex: newBegIndexInt,\r\n                endIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n    getCustomers = () => {\r\n\r\n        axios.get('/')\r\n            .then(response => {\r\n               // console.log(response);\r\n                this.setState({incoming: response.data,\r\n                    sortedFilteredList: response.data});\r\n            })\r\n            .catch(error => {\r\n                // console.log('hello' + error);\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n                // this.props.history.push('/login');\r\n            })\r\n    };\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getCustomers();\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const juser = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n        const listOfCustomers = this.state.sortedFilteredList.slice(this.state.beginIndex, this.state.endIndex).map( item => {\r\n\r\n            return (\r\n           \r\n                <ListCustomerComponent \r\n                    key={item.id}\r\n                    name={item.lastName + ' ' + item.firstName}\r\n                    telNumber={item.telNumber}\r\n                    email={item.email}\r\n                    edit={() => this.editCustomer(item.id)}\r\n                    delete={() => this.deleteCustomer(item.id)}\r\n                    juser={juser}\r\n                    add={() => this.addCustomer(item.id)}\r\n                    create={() => this.createOrder(item.id)}\r\n                    allOrders={() => this.allOrders(item.id)}\r\n                    car={this.props.match.params.car}\r\n                />\r\n            )\r\n        });\r\n\r\n        const myTable = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"name\" onClick={() => this.sortMyList()} >Фамiлiя iм'я &#8645;</th>\r\n                            <th className=\"telNumber\" >Номер тел.:</th>\r\n                            <th className=\"edite\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}} ></th>\r\n                            <th className=\"delete\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}}></th>\r\n                            <th className=\"add\" style={juser.role === 'ROLE_USER' ? {} : {display: 'none'}}></th>\r\n                            <th className=\"allOrders\" style={this.props.match.params.car === undefined ?  {} : {display: 'none'}}></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {listOfCustomers} \r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"form-group\">\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.fileteredBy}\r\n                                    onChange={this.filterMyList}\r\n                                    placeholder={'Find By'}\r\n                                />\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShow}\r\n                                    onChange={this.changeListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                  \r\n                </div>\r\n                {myTable}\r\n    \r\n\r\n                <br/>\r\n                \r\n                <div >\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.paginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.beginIndex + 1} - {this.state.endIndex}</strong>\r\n                    <strong onClick={this.paginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default CustomerList;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass CustomersPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Клiенти - Г а р а ж';\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Клiенти</h1>\r\n\r\n                        <div  >\r\n                                <Link to=\"/newCustomer\">\r\n                                    <button className=\"btn-success my-button\">Свторити Клiента</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/customerList\">\r\n                                    <button className=\" btn-success my-button\">Список Клiенту</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/\">\r\n                                    <button className=\" btn-success my-button \">Найти Клiента</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CustomersPage;","import React, {Component} from 'react';\r\n\r\nimport './ShowCustomer.css'\r\n\r\nclass ShowCustomer extends Component{\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n                 \r\n            <div className={\"cust\"}>\r\n               <h3>{this.props.name}</h3>\r\n            </div> \r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ShowCustomer;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ShowCustomer from '../../components/Customer/ShowCustomer'\r\n\r\nclass NewOrder extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Новий Заказ - Г а р а ж';\r\n\r\n        // console.log(props);\r\n    }\r\n\r\n    orderId = '';\r\n\r\n    state = {\r\n        \r\n            customerIsPresent: false,\r\n            carIsPresent: false,\r\n            customer: {\r\n                id: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                telNumber: '',\r\n                email:  ''\r\n            },\r\n            car: {\r\n                id: '',\r\n                vinCode: '',\r\n                licencePlate: '',\r\n                carMade: ''\r\n            },\r\n            amountPayedInAdvance: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            problem: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            }\r\n        \r\n    };\r\n\r\n    newCustomer = () => {\r\n        // console.log('new ');\r\n        let id = this.state.car.id === '' ? 0 : this.state.car.id;\r\n        this.props.history.push(\"/creatingCustomer/\" + id);\r\n    }\r\n\r\n    customerFromList = () => {\r\n        // console.log(this.state.car.id);\r\n        let id = this.state.car.id === '' ? 0 : this.state.car.id;\r\n        this.props.history.push(\"/customerList/\" + id);\r\n    }\r\n\r\n\r\n    newCar = () => {\r\n        // console.log('new car');\r\n        let id = this.state.customer.id === '' ? 0 : this.state.customer.id;\r\n        this.props.history.push(\"/creatingCar/\" + id);\r\n    }\r\n\r\n    carFromList = () => {\r\n        // console.log(this.state.customer.id);\r\n        let id = this.state.customer.id === '' ? 0 : this.state.customer.id;\r\n        this.props.history.push(\"/carList/\" + id);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        if (this.props.match.params.car){\r\n\r\n            if(this.props.match.params.car !== '0'){\r\n                // console.log('getting car info')\r\n                this.getCarByParamId();\r\n            }\r\n\r\n            if(this.props.match.params.cust !== '0'){\r\n                // console.log('getting customer info')\r\n                this.getCustomerByParamId();\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    getCustomerByParamId = () => {\r\n        axios.get('/' + this.props.match.params.cust)\r\n            .then((response) => {\r\n                const updatedProductForm = {\r\n                    ...this.state.customer\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    let updatedFormElement = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, customer: updatedProductForm,\r\n                    customerIsPresent: true});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n    getCarByParamId = () => {\r\n        axios.get('/cars/id/' + this.props.match.params.car)\r\n            .then((response) => {\r\n                const updatedProductForm = {\r\n                    ...this.state.car\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    let updatedFormElement = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, car: updatedProductForm,\r\n                    carIsPresent: true});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n\r\n    inputChangeHandlerOfProblem = (event) => {\r\n        const target = event.target;\r\n        const updatedCustomerForm = {\r\n            ...this.state.problem\r\n        };\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        updatedCustomerForm.value = value;\r\n        updatedCustomerForm.isValid = true;\r\n        \r\n\r\n        this.setState({...this.state, problem: updatedCustomerForm});\r\n\r\n    };\r\n\r\n    inputChangeHandlerOfAmount = (event) => {\r\n        const target = event.target;\r\n        const updatedCustomerForm = {\r\n            ...this.state.amountPayedInAdvance\r\n        };\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        updatedCustomerForm.value = value;\r\n        updatedCustomerForm.isValid = true;\r\n        \r\n\r\n        this.setState({...this.state, amountPayedInAdvance: updatedCustomerForm});\r\n\r\n    };\r\n\r\n\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        formData.customer = this.state.customer.id;\r\n        formData.car = this.state.car.id;\r\n        formData.amountPayedInAdvance = this.state.amountPayedInAdvance.value;\r\n        formData.problem = this.state.problem.value;\r\n\r\n        // console.log(formData);\r\n\r\n        let url = '/orders';\r\n        let method = 'post';\r\n      \r\n        axios({method: method, url: url, data: formData})\r\n            .then((response) => {\r\n                this.orderId = response.data.id;\r\n                this.setState({\r\n                    customerIsPresent: false,\r\n                    carIsPresent: false,\r\n                    customer: {\r\n                        id: '',\r\n                        firstName: '',\r\n                        lastName: '',\r\n                        telNumber: '',\r\n                        email:  ''\r\n                    },\r\n                    car: {\r\n                        id: '',\r\n                        vinCode: '',\r\n                        licencePlate: '',\r\n                        carMade: ''\r\n                    },\r\n                    amountPayedInAdvance: {\r\n                        value: '',\r\n                        isValid: true,\r\n                        message: ''\r\n                    },\r\n                    problem: {\r\n                        value: '',\r\n                        isValid: true,\r\n                        message: ''\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/order/' + this.orderId);\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                //  console.log(error.response.data);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n    hideMessage = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            emailSent: false\r\n        })\r\n    };\r\n\r\n    validationHandler = (error) => {\r\n        const updatedCategoryForm = {\r\n            ...this.state.problem\r\n        };\r\n        updatedCategoryForm.isValid = true;\r\n        updatedCategoryForm.message = '';\r\n   \r\n        if (error.response.data.hasOwnProperty('fieldErrors')) {\r\n            for (let fieldError of error.response.data.fieldErrors) {\r\n                if (fieldError.field === 'problem')\r\n               \r\n                updatedCategoryForm.isValid = false;\r\n                updatedCategoryForm.message = fieldError.message;\r\n               \r\n            }\r\n\r\n            this.setState({ ...this.state, problem: updatedCategoryForm});\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                newPartForm: {\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Please don\\'t mess with my input fields'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        // console.log(this.state)\r\n\r\n        return (\r\n            <div className=\"container \">\r\n                <h2> {this.props.match.params.id != null ? \"Змынити\" : \"Новий\"} Заказ </h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n\r\n                    <div className=\"form-group try-border\">\r\n                        <label\r\n                            className={ \"control-label label-for-buttons\"}><h4>Клiент:</h4>\r\n                            </label>\r\n\r\n                            <button className={this.state.customerIsPresent ? \"toHide\" : \"button-for-new-order\"}\r\n                            onClick={this.newCustomer}>Створити</button>\r\n\r\n                            <button className={this.state.customerIsPresent ? \"toHide\" : \"button-for-new-order\"}\r\n                            onClick={this.customerFromList}>Добавити з списка</button>\r\n\r\n                            {this.state.customerIsPresent ? <ShowCustomer \r\n                            name={this.state.customer.firstName + ' ' + this.state.customer.lastName}/> : \"\"}\r\n\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    <div className=\"form-group try-border\">\r\n                        <label\r\n                            className={ \"control-label label-for-buttons\"}><h4>Машина:</h4>\r\n                            </label>\r\n\r\n                            <button className={this.state.carIsPresent ? \"toHide\" : \"button-for-new-order\"}\r\n                            onClick={this.newCar}>Створити</button>\r\n\r\n                            <button className={this.state.carIsPresent ? \"toHide\" : \"button-for-new-order\"}\r\n                            onClick={this.carFromList}>Добавити з списка</button>\r\n\r\n                            {this.state.carIsPresent ? <ShowCustomer \r\n                            name={this.state.car.licencePlate}/> : \"\"}\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.amountPayedInAdvance.isValid ? \"control-label label-for-buttons\" : \"control-label input-label invalid-label\"}>\r\n                                Сума предоплати:</label>\r\n                        <input\r\n                            className={this.state.amountPayedInAdvance.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            id=\"amountPayedInAdvance\"\r\n                            name=\"amountPayedInAdvance\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            value={this.state.amountPayedInAdvance.value}\r\n                            onChange={this.inputChangeHandlerOfAmount}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.amountPayedInAdvance.message}</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.problem.isValid ? \"control-label label-2\" : \"control-label input-label invalid-label\"}>\r\n                                Описанie проблеми:</label>\r\n                        <textarea className={\"my-textarea\"}\r\n                            // className={this.state.problem.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            type=\"text\"\r\n                            id=\"problem\"\r\n                            name=\"problem\"\r\n                            value={this.state.problem.value}\r\n                            onChange={this.inputChangeHandlerOfProblem}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.problem.message}</span>\r\n                    </div>\r\n                    \r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Сохранити</button>\r\n\r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n\r\n                   \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default NewOrder;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass CarsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Машини - Г а р а ж';\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Машини</h1>\r\n\r\n                        <div  >\r\n                                <Link to=\"/addCar\">\r\n                                    <button className=\"btn-success my-button\">Свторити Машину</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/carList\">\r\n                                    <button className=\"btn-success my-button\">Список Машин</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn-success my-button\">Найти Машину</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default CarsPage;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass AddCar extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Нова Машина - Г а р а ж';\r\n\r\n        // console.log(props);\r\n    }\r\n\r\n    state = {\r\n        newCarForm: {\r\n            vinCode: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            licencePlate: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            carMade: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            }\r\n        }\r\n    };\r\n\r\n    inputChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const updatedCarForm = {\r\n            ...this.state.newCarForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedCarForm[target.name]\r\n        };\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.isValid = true;\r\n        updatedCarForm[target.name] = updatedFormElement;\r\n\r\n        this.setState({...this.state, newCarForm: updatedCarForm});\r\n\r\n    };\r\n\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.newCarForm) {\r\n            formData[formElementIdentifier] = this.state.newCarForm[formElementIdentifier].value;\r\n        }\r\n\r\n\r\n        let url = '/cars';\r\n        let method = 'post';\r\n        const id = this.props.match.params.id;\r\n        const cust = this.props.match.params.cust;\r\n        if (id) {\r\n            url += '/' + id;\r\n            method = 'put';\r\n        }\r\n\r\n        // console.log(method + ' ' + url);\r\n        // console.log(formData);\r\n\r\n        if (cust){\r\n            axios({method: method, url: url, data: formData})\r\n            .then((response) => {\r\n                // console.log(response);\r\n                this.props.history.push('/newOrder/' + cust + '/' + response.data.id);\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n        }else{\r\n            axios({method: method, url: url, data: formData})\r\n            .then(() => {\r\n                this.setState({\r\n                    newCarForm: {\r\n                        vinCode: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        licencePlate: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        carMade: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/carList');\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n        \r\n    };\r\n\r\n\r\n    hideMessage = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            emailSent: false\r\n        })\r\n    };\r\n\r\n    validationHandler = (error) => {\r\n        const updatedCategoryForm = {\r\n            ...this.state.newCarForm\r\n        };\r\n\r\n        for (let field in this.state.newCarForm) {\r\n            const updatedFormElement = {\r\n                ...updatedCategoryForm[field]\r\n            };\r\n            updatedFormElement.isValid = true;\r\n            updatedFormElement.message = '';\r\n            updatedCategoryForm[field] = updatedFormElement;\r\n        }\r\n\r\n        if (error.response.data.hasOwnProperty('fieldErrors')) {\r\n            for (let fieldError of error.response.data.fieldErrors) {\r\n                const updatedFormElement = {\r\n                    ...updatedCategoryForm[fieldError.field]\r\n                };\r\n                updatedFormElement.isValid = false;\r\n                updatedFormElement.message = fieldError.message;\r\n                updatedCategoryForm[fieldError.field] = updatedFormElement;\r\n            }\r\n\r\n            this.setState({...this.state, newCarForm: updatedCategoryForm});\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                newCarForm: {\r\n                    vinCode: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Please don\\'t mess with my input fields'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    getCarByParamsId = () => {\r\n        axios.get('/cars/id/' + this.props.match.params.id)\r\n            .then((response) => {\r\n              \r\n                const updatedProductForm = {\r\n                    ...this.state.newCarForm\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    const updatedFormElement = {\r\n                        ...updatedProductForm[field]\r\n                    };\r\n                    updatedFormElement.value = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, newCarForm: updatedProductForm});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.match.params.id) {\r\n            this.getCarByParamsId();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2> {this.props.match.params.id != null ? \"Змiнити\" : \"Нова\"} Машин{this.props.match.params.id != null ? \"у\" : \"а\"}</h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newCarForm.licencePlate.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                            Номерний знак:</label>\r\n                        <input\r\n                            className={this.state.newCarForm.licencePlate.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"licencePlate\"\r\n                            value={this.state.newCarForm.licencePlate.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newCarForm.licencePlate.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newCarForm.vinCode.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                                VIN код:</label>\r\n                        <input\r\n                            className={this.state.newCarForm.vinCode.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"vinCode\"\r\n                            value={this.state.newCarForm.vinCode.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newCarForm.vinCode.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newCarForm.carMade.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                                Модель i марка:</label>\r\n                        <input\r\n                            className={this.state.newCarForm.carMade.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"carMade\"\r\n                            value={this.state.newCarForm.carMade.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newCarForm.carMade.message}</span>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Сохранити</button>\r\n\r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n\r\n                </form>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default AddCar;","import React, {Component} from 'react';\r\n\r\n\r\nclass ListCarComponent extends Component{\r\n\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     // console.log(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n                 \r\n            <tr>\r\n                <td className=\"made\">{this.props.carMade}</td>\r\n                <td className=\"vin\"  style={this.props.browser === 'Android OS' ? {display: 'none'} : {}}>{this.props.vinCode}</td>\r\n                <td className=\"license\">{this.props.licencePlate}</td>  \r\n                <td className=\"edite\" style={this.props.juser.role === 'ROLE_USER' ? {display: 'none'} : {}}> <button onClick={this.props.edit}>Iзмынити</button> </td>\r\n                <td className=\"delete\" style={this.props.juser.role === 'ROLE_USER' ? {display: 'none'} : {}}> <button onClick={this.props.delete}>Удалити</button> </td>\r\n                <td className=\"add\" style={\r\n                    this.props.juser.role === 'ROLE_USER' ? \r\n                    (this.props.cust === undefined ?  {display: 'none'} : {}) \r\n                    : {display: 'none'}\r\n                    }>  <button   onClick={this.props.add}>Додати</button> </td>\r\n                <td className=\"create\" style={\r\n                    this.props.juser.role === 'ROLE_USER' ? \r\n                    (this.props.cust === undefined ?  {} : {display: 'none'}) \r\n                    : {display: 'none'}\r\n                    }>  <button   onClick={this.props.create}>Новий заказ</button> </td>\r\n                <td className=\"allOrders\" style={\r\n                    this.props.cust === undefined ?  {} : {display: 'none'} \r\n                    }>  <button   onClick={this.props.allOrders}>Предидущi закази</button> </td>\r\n            </tr> \r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ListCarComponent;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport ListCarComponent from '../../components/ListCar/ListCarComponent'\r\n\r\nimport '../../components/ListCar/ListCarComponent.css'\r\n\r\nclass CarList extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Машини - Г а р а ж';\r\n         \r\n    }\r\n\r\n    \r\n\r\n    left = '<<<';\r\n    right = '>>>'\r\n\r\n    state = {\r\n\r\n        sorted: '',\r\n\r\n        incoming: [],\r\n\r\n        sortedFilteredList: [],\r\n\r\n        fileteredByLicense: '',\r\n\r\n        fileteredByCarMade: '',\r\n\r\n        fileteredByVin: '',\r\n\r\n        itemsToShow: 10,\r\n\r\n        beginIndex: 0,\r\n\r\n        endIndex: 10\r\n    };\r\n\r\n    editCar = (id) =>{ \r\n        // console.log('editing ' + id);\r\n        this.props.history.push(\"/editCar/\" + id);\r\n    }\r\n\r\n    deleteCar = (id) =>{ \r\n        console.log('deleting ' + id);\r\n    }\r\n\r\n    addCar = (id) =>{ \r\n        // console.log('adding ' + id);\r\n        this.props.history.push(\"/newOrder/\" + this.props.match.params.cust + \"/\" +  id); \r\n    }\r\n\r\n    createOrder = (id) =>{ \r\n        // console.log('creating order for ' + id);\r\n        this.props.history.push(\"/newOrder/0/\" + id);\r\n    }\r\n\r\n    allOrders = (id) =>{\r\n        // console.log('orders of ' + id);\r\n        this.props.history.push(\"/openOrder/\" + id + \"/x\");\r\n    }\r\n\r\n\r\n    sortMyList = (type) => {\r\n        //   console.log('sorting by ' + type)\r\n           var updatableList = [...this.state.sortedFilteredList];\r\n   \r\n          \r\n           if (type === 'vin' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.vinCode.toLowerCase() > b.vinCode.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'vin' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.vinCode.toLowerCase() < b.vinCode.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'license' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.licencePlate.toLowerCase() > b.licencePlate.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'license' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.licencePlate.toLowerCase() < b.licencePlate.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n\r\n           if (type === 'made' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n            const result = updatableList.sort((a, b) => (a.carMade.toLowerCase() > b.carMade.toLowerCase()) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n                sorted: 'asc' , \r\n                sortedFilteredList: result });\r\n\r\n            }\r\n\r\n            if (type === 'made' && this.state.sorted === 'asc' ){\r\n                const result = updatableList.sort((a, b) => (a.carMade.toLowerCase() < b.carMade.toLowerCase()) ? 1 : -1 );\r\n\r\n                this.setState({...this.state,\r\n                    sorted: 'desc' , \r\n                    sortedFilteredList: result });\r\n\r\n            }\r\n   \r\n    }\r\n\r\n\r\n    filterMyListByVin = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.vinCode.includes(value) ||\r\n         item.vinCode.toLowerCase().includes(value) || item.vinCode.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state, \r\n            fileteredByVin: value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n    filterMyListByCarMade = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.carMade.includes(value) ||\r\n         item.carMade.toLowerCase().includes(value) || item.carMade.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state, \r\n            fileteredByCarMade: value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n    filterMyListByLicensePlate = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.licencePlate.includes(value) ||\r\n         item.licencePlate.toLowerCase().includes(value) || item.licencePlate.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state, \r\n            fileteredByLicense: value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n\r\n\r\n    changeListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShow: value});\r\n        }\r\n    }\r\n\r\n    paginatorLeft = () => {\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                beginIndex: 0,\r\n                endIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    paginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.endIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                beginIndex: newBegIndexInt,\r\n                endIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n\r\n\r\n\r\n    getCars = () => {\r\n\r\n        axios.get('/cars')\r\n            .then(response => {\r\n               // console.log(response);\r\n                this.setState({incoming: response.data,\r\n                    sortedFilteredList: response.data});\r\n            })\r\n            .catch(error => {\r\n                // console.log('hello' + error);\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n                // this.props.history.push('/login');\r\n            })\r\n    };\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getCars();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { detect } = require('detect-browser');\r\n        const browser = detect();\r\n        // console.log(browser.name + ' ' + browser.version  + ' ' + browser.os + 'Android OS')\r\n\r\n        const juser = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n        const listOfCars = this.state.sortedFilteredList.slice(this.state.beginIndex, this.state.endIndex).map( item => {\r\n\r\n            return (\r\n                <ListCarComponent \r\n                    key={item.id}\r\n                    vinCode={'...' + item.vinCode.substring(item.vinCode.length - 7, item.vinCode.length)}\r\n                    licencePlate={item.licencePlate}\r\n                    carMade={item.carMade}\r\n                    edit={() => this.editCar(item.id)}\r\n                    delete={() => this.deleteCar(item.id)}\r\n                    juser={juser}\r\n                    add={() => this.addCar(item.id)}\r\n                    create={() => this.createOrder(item.id)}\r\n                    allOrders={() => this.allOrders(item.id)}\r\n                    cust={this.props.match.params.cust}\r\n                    browser={browser.os}\r\n                />\r\n            )\r\n        });\r\n\r\n        const myTable = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"made\" onClick={() => this.sortMyList('made')} >Марка &#8645;</th>\r\n                            <th className=\"vin\" style={browser.os === 'Android OS' ? {display: 'none'} : {}} onClick={() => this.sortMyList('vin')} >VIN code &#8645;</th>\r\n                            <th className=\"license\" onClick={() => this.sortMyList('license')} >Номера &#8645;</th>\r\n                            <th className=\"edite\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}} ></th>\r\n                            <th className=\"delete\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}}></th>\r\n                            <th className=\"add\" style={juser.role === 'ROLE_USER' ? {} : {display: 'none'}}></th>\r\n                            <th className=\"allOrders\" style={this.props.match.params.cust === undefined ?  {} : {display: 'none'}}></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listOfCars} \r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"form-group\">\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.fileteredByVin}\r\n                                    onChange={this.filterMyListByVin}\r\n                                    placeholder={'Find By VIN'}\r\n                                />\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShow}\r\n                                    onChange={this.changeListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field-2\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.fileteredByLicense}\r\n                                    onChange={this.filterMyListByLicensePlate}\r\n                                    placeholder={'Номера'}\r\n                                />\r\n\r\n                                <strong>       </strong>\r\n                                \r\n                                <input\r\n                                    className=\"form-control my-input-search-field-2\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.fileteredByCarMade}\r\n                                    onChange={this.filterMyListByCarMade}\r\n                                    placeholder={'Модель'}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                  \r\n                </div>\r\n                {myTable}\r\n    \r\n\r\n                <br/>\r\n                \r\n                <div >\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.paginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.beginIndex + 1} - {this.state.endIndex}</strong>\r\n                    <strong onClick={this.paginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    };\r\n\r\n\r\n\r\n}\r\n\r\nexport default CarList;","import React, {Component} from 'react';\r\n\r\nimport './ShowCustomer.css'\r\n\r\nclass ShowCustomerInOrder extends Component{\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n                 \r\n            <div className={\"cust\"}>\r\n                <table border=\"0\" >\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colSpan={\"2\"} ><h4> {this.props.upper} </h4> </td>\r\n                        </tr> \r\n\r\n                        <tr>\r\n                           <td className=\"left\" ><h5> {this.props.left} </h5> </td>\r\n                           <td className=\"right\"><h5> {this.props.right} </h5> </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div> \r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ShowCustomerInOrder;","import React, {Component} from 'react';\r\n\r\nclass ListWorkForOrder extends Component{\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n           \r\n            <tr>\r\n                <td className=\"name\">{this.props.name}</td>\r\n                <td className=\"price\">{this.props.price}</td>\r\n                <td className=\"user\">{this.props.user}    <button onClick={this.props.changeUser}  style={(this.props.juser.role === 'ROLE_ADMIN' && !this.props.closed) ? (this.props.done ? {} : {display: 'none'}) : {display: 'none'}} >Iзмiнити</button> </td>\r\n                <td className=\"desc\" style={(this.props.closed || this.props.juser.role === 'ROLE_ADMIN') ? {display: 'none'} : {}}>{this.props.desc}</td>\r\n                <td className=\"done\" style={this.props.juser.role === 'ROLE_USER' ? (this.props.done ? {display: 'none'} : {}) : ({display: 'none'})} > <button onClick={this.props.closeWork}>Зробити</button> </td>\r\n                <td className=\"done\" style={this.props.done ? {} : {display: 'none'}}> Зроблена!</td>\r\n                <td className=\"done\" style={this.props.juser.role === 'ROLE_ADMIN' ? (this.props.done ? {display: 'none'} : {}) : ({display: 'none'})} > Не Зроблена! </td>\r\n                <td className=\"done\" style={(this.props.juser.role === 'ROLE_ADMIN' && !this.props.closed) ? {} : {display: 'none'}} > <button onClick={this.props.remove}>Удалити</button> </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ListWorkForOrder;","import React, {Component} from 'react';\r\n\r\nclass ListPartForOrder extends Component{\r\n\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n           \r\n            <tr>\r\n                <td className=\"name\">{this.props.name}</td>\r\n                <td className=\"price\">{this.props.amount}</td>\r\n                <td className=\"price\">{this.props.totalPrice}</td>\r\n                <td className=\"desc\" style={(this.props.closed || this.props.juser.role === 'ROLE_ADMIN') ? {display: 'none'} : {}}>{this.props.desc}</td>\r\n                <td className=\"done\" style={(this.props.juser.role === 'ROLE_ADMIN' && !this.props.closed) ? {} : {display: 'none'}} > <button onClick={this.props.remove}>Удалити</button> </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListPartForOrder;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport ShowCustomerInOrder from '../../components/Customer/ShowCustomerInOrder';\r\nimport ListWorkForOrder from '../../components/ListWorkForOrder/ListWorkForOrder'\r\nimport date from 'date-and-time';\r\n\r\n\r\nimport './Order.css'\r\nimport '../../components/ListWorkForOrder/ListWorkForOrder.css'\r\nimport '../../components/ListPart/ListPartComponent.css'\r\nimport ListPartForOrder from '../../components/ListPartForOrder/ListPartForOrder';\r\n\r\n\r\nclass Order extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Заказ - Г а р а ж';\r\n        //console.log(props);\r\n    }\r\n\r\n    left = '<<<';\r\n    right = '>>>'\r\n\r\n    amountToPay = 0;\r\n\r\n    state = {\r\n        order: {\r\n            id: '', \r\n            customer: {\r\n                firstName: '',\r\n                lastName: '',\r\n                telNumber: '',\r\n                email: ''\r\n            },\r\n            car: {\r\n                vinCode: '',\r\n                licencePlate: '',\r\n                carMade: ''\r\n            },\r\n            works: [],\r\n            partCounts: [],\r\n            orderOpened: '',\r\n            orderClosed: '',\r\n            payedFor: '',\r\n            amountPayedInAdvance: '',\r\n            problem: '',\r\n            amountToPay: ''\r\n        },\r\n\r\n        sortedWork: '',\r\n\r\n        sortedFilteredListWork: [],\r\n\r\n        workFileteredBy: '',\r\n\r\n        itemsToShowWork: 5,\r\n\r\n        workBeginIndex: 0,\r\n\r\n        workEndIndex: 5,\r\n\r\n\r\n\r\n        sortedPart: '',\r\n\r\n        sortedFilteredListPart: [],\r\n\r\n        partFileteredBy: '',\r\n\r\n        itemsToShowPart: 5,\r\n\r\n        partBeginIndex: 0,\r\n\r\n        partEndIndex: 5\r\n\r\n\r\n    };\r\n\r\n    calcTotalToPay = (works) => {\r\n        const parts = [...this.state.order.partCounts];\r\n        let preapid = this.state.order.amountPayedInAdvance;\r\n        let total = 0;\r\n        total -= preapid;\r\n\r\n        works.map(item =>{\r\n            if (item.workDone){\r\n                total += item.price;\r\n            }\r\n            return total;\r\n        })\r\n        parts.map(item =>{\r\n                total += (item.retailPrice * item.amount);\r\n                return total;      \r\n        })\r\n        \r\n       return total;\r\n    }\r\n\r\n    calcTotalToPay2 = (parts) => {\r\n        const works = [...this.state.order.works];\r\n        let preapid = this.state.order.amountPayedInAdvance;\r\n        let total = 0;\r\n        total -= preapid;\r\n\r\n        parts.map(item =>{\r\n            total += (item.retailPrice * item.amount); \r\n            return total;\r\n        })\r\n        works.map(item =>{\r\n            if (item.workDone){\r\n                total += item.price;\r\n            }\r\n            return total;       \r\n        })\r\n        \r\n       return total;\r\n    }\r\n\r\n    ifAllWorksAreDone = () =>{\r\n        const works = [...this.state.order.works]\r\n\r\n        let result = works.filter(item => !item.workDone)\r\n        if (result.length > 0){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    filterMyWorkList = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.order.works];\r\n\r\n        const result = updatableList.filter((item) => item.workName.includes(value) ||\r\n         item.workName.toLowerCase().includes(value) || item.workName.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShowWork];\r\n\r\n        this.setState({...this.state, \r\n            workFileteredBy: value,\r\n            sortedFilteredListWork: result,\r\n            workEndIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n    filterMyPartList = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.order.partCounts];\r\n\r\n        const result = updatableList.filter((item) => item.partName.includes(value) ||\r\n         item.partName.toLowerCase().includes(value) || item.partName.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShowPart];\r\n\r\n        this.setState({...this.state, \r\n            partFileteredBy: value,\r\n            sortedFilteredListPart: result,\r\n            partEndIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n    changeWorkListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredListWork.length;\r\n        const bIndex = [this.state.workBeginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShowWork: value,\r\n                workEndIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShowWork: value,\r\n                workEndIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShowWork: value});\r\n        }\r\n    }\r\n\r\n    changePartListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredListPart.length;\r\n        const bIndex = [this.state.partBeginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShowPart: value,\r\n                partEndIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShowPart: value,\r\n                partEndIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShowPart: value});\r\n        }\r\n    }\r\n\r\n    workPaginatorLeft = () => {\r\n        const bIndex = [this.state.workBeginIndex];\r\n        const eIndex = [this.state.workEndIndex];\r\n        const size = [this.state.itemsToShowWork];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                workBeginIndex: 0,\r\n                workEndIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                workBeginIndex: begIndexInt,\r\n                workEndIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    partPaginatorLeft = () => {\r\n        const bIndex = [this.state.partBeginIndex];\r\n        const eIndex = [this.state.partEndIndex];\r\n        const size = [this.state.itemsToShowPart];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                partBeginIndex: 0,\r\n                partEndIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                partBeginIndex: begIndexInt,\r\n                partEndIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    workPaginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredListWork.length;\r\n        const bIndex = [this.state.workBeginIndex];\r\n        const eIndex = [this.state.workEndIndex];\r\n        const size = [this.state.itemsToShowWork];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                workBeginIndex: begIndexInt,\r\n                workEndIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.workEndIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                workBeginIndex: newBegIndexInt,\r\n                workEndIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n    partPaginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredListPart.length;\r\n        const bIndex = [this.state.partBeginIndex];\r\n        const eIndex = [this.state.partEndIndex];\r\n        const size = [this.state.itemsToShowPart];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                partBeginIndex: begIndexInt,\r\n                partEndIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.partEndIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                partBeginIndex: newBegIndexInt,\r\n                partEndIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n    sortMyWorkList = (type) => {\r\n        //   console.log('sorting by ' + type)\r\n           var updatableList = [...this.state.sortedFilteredListWork];\r\n   \r\n          \r\n           if (type === 'name' && (this.state.sortedWork === '' || this.state.sortedWork === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.workName.toLowerCase() > b.workName.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                sortedWork: 'asc' , \r\n                sortedFilteredListWork: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'name' && this.state.sortedWork === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.workName.toLowerCase() < b.workName.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                sortedWork: 'desc' , \r\n                sortedFilteredListWork: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'doneBy' && (this.state.sortedWork === '' || this.state.sortedWork === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.userName.toLowerCase() > b.userName.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                sortedWork: 'asc' , \r\n                sortedFilteredListWork: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'doneBy' && this.state.sortedWork === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.userName.toLowerCase() < b.userName.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                sortedWork: 'desc' , \r\n                sortedFilteredListWork: result });\r\n   \r\n           }\r\n\r\n           if (type === 'ifDone' && (this.state.sortedWork === '' || this.state.sortedWork === 'desc') ){\r\n            const result = updatableList.sort((a, b) => (a.workDone > b.workDone) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n             sortedWork: 'asc' , \r\n             sortedFilteredListWork: result });\r\n\r\n            }\r\n\r\n            if (type === 'ifDone' && this.state.sortedWork === 'asc' ){\r\n                const result = updatableList.sort((a, b) => (a.workDone < b.workDone) ? 1 : -1 );\r\n\r\n                this.setState({...this.state,\r\n                sortedWork: 'desc' , \r\n                sortedFilteredListWork: result });\r\n\r\n            }\r\n   \r\n    }\r\n\r\n    sortMyPartList = () =>{\r\n        var updatableList = [...this.state.sortedFilteredListPart];\r\n   \r\n          \r\n        if (this.state.sortedWork === '' || this.state.sortedWork === 'desc') {\r\n            const result = updatableList.sort((a, b) => (a.partName.toLowerCase() > b.partName.toLowerCase()) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n             sortedWork: 'asc' , \r\n             sortedFilteredListPart: result });\r\n\r\n        }\r\n\r\n        if (this.state.sortedWork === 'asc' ){\r\n            const result = updatableList.sort((a, b) => (a.partName.toLowerCase() < b.partName.toLowerCase()) ? 1 : -1 );\r\n\r\n            this.setState({...this.state,\r\n             sortedWork: 'desc' , \r\n             sortedFilteredListPart: result });\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    removePartCount = (id) =>{\r\n        axios.delete('/orders/remove_part/' + this.state.order.id + '/' + id)\r\n        .then((response) => {\r\n            const updatedProductForm = {\r\n                ...this.state.order\r\n            };\r\n\r\n            for (let field in response.data) {\r\n                let updatedFormElement = {\r\n                    ...updatedProductForm[field]\r\n                };\r\n                updatedFormElement = response.data[field];\r\n                updatedProductForm[field] = updatedFormElement;\r\n            }\r\n             updatedProductForm.amountToPay = this.calcTotalToPay2(response.data.partCounts);\r\n            \r\n            this.setState({...this.state, order: updatedProductForm ,\r\n                sortedFilteredListWork:  response.data.works,\r\n                sortedFilteredListPart: response.data.partCounts});\r\n        })\r\n        .catch(error => {\r\n            this.setState(() => {\r\n                throw error;\r\n            })\r\n        })\r\n    }\r\n\r\n    closeWork = (id) => {\r\n     //   console.log('work is closing ' + id)\r\n        axios.post('/orders/close_work/' + this.state.order.id + '/' + id)\r\n        .then((response) => {\r\n            const updatedProductForm = {\r\n                ...this.state.order\r\n            };\r\n\r\n            for (let field in response.data) {\r\n                let updatedFormElement = {\r\n                    ...updatedProductForm[field]\r\n                };\r\n                updatedFormElement = response.data[field];\r\n                updatedProductForm[field] = updatedFormElement;\r\n            }\r\n             updatedProductForm.amountToPay = this.calcTotalToPay(response.data.works);\r\n            \r\n            this.setState({...this.state, order: updatedProductForm,\r\n                sortedFilteredListWork:  response.data.works});\r\n\r\n            // this.props.history.push('/order/' + this.state.order.id);\r\n        })\r\n        .catch(error => {\r\n            this.setState(() => {\r\n                throw error;\r\n            })\r\n        })\r\n\r\n        \r\n    };\r\n\r\n    removeWork = (id) => {\r\n        // console.log(id);\r\n        axios.delete('/orders/remove_work/' + this.state.order.id + '/' + id)\r\n        .then((response) => {\r\n            const updatedProductForm = {\r\n                ...this.state.order\r\n            };\r\n\r\n            for (let field in response.data) {\r\n                let updatedFormElement = {\r\n                    ...updatedProductForm[field]\r\n                };\r\n                updatedFormElement = response.data[field];\r\n                updatedProductForm[field] = updatedFormElement;\r\n            }\r\n             updatedProductForm.amountToPay = this.calcTotalToPay(response.data.works);\r\n            \r\n            this.setState({...this.state, order: updatedProductForm ,\r\n                sortedFilteredListWork:  response.data.works,\r\n                sortedFilteredListPart: response.data.partCounts});\r\n        })\r\n        .catch(error => {\r\n            this.setState(() => {\r\n                throw error;\r\n            })\r\n        })\r\n    };\r\n\r\n    addNewWork = () => {\r\n        // console.log('adding new work')\r\n        this.props.history.push(\"/addWorkToOrder/\" + this.state.order.id);\r\n    };\r\n\r\n    payFor = () =>{\r\n        axios.post('/orders/pay_for/' + this.state.order.id)\r\n                    .then((response) => {\r\n                        const updatedProductForm = {\r\n                            ...this.state.order\r\n                        };\r\n        \r\n                        for (let field in response.data) {\r\n                            let updatedFormElement = {\r\n                                ...updatedProductForm[field]\r\n                            };\r\n                            updatedFormElement = response.data[field];\r\n                            updatedProductForm[field] = updatedFormElement;\r\n                        }\r\n                        updatedProductForm.amountToPay = 0;\r\n                        \r\n                        this.setState({...this.state, order: updatedProductForm ,\r\n                            sortedFilteredListWork:  response.data.works});\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n    }\r\n\r\n    closeOrder = () =>{\r\n        if (!this.ifAllWorksAreDone()){\r\n            alert('Ще не всi роботи зробленi!!! Раз зроби всi роботи!');\r\n        }else if(this.ifAllWorksAreDone() && !this.state.order.payedFor) {\r\n            alert('Заказ ще не оплачений!!! Раз оплатiт заказ!');\r\n        }else{\r\n            axios.get('/orders/close/' + this.state.order.id)\r\n                    .then((response) => {\r\n                        const updatedProductForm = {\r\n                            ...this.state.order\r\n                        };\r\n        \r\n                        for (let field in response.data) {\r\n                            let updatedFormElement = {\r\n                                ...updatedProductForm[field]\r\n                            };\r\n                            updatedFormElement = response.data[field];\r\n                            updatedProductForm[field] = updatedFormElement;\r\n                        }\r\n                        \r\n                        this.setState({...this.state, order: updatedProductForm ,\r\n                            sortedFilteredListWork:  response.data.works});\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n        }\r\n        \r\n    }\r\n\r\n    getReceipt = () =>{\r\n        console.log('getting the receipt');\r\n    }\r\n\r\n    changeUser = (id) =>{\r\n        // console.log('changing user for ' + id)\r\n        this.props.history.push(\"/changeUser/\" + id + '/' + this.state.order.id);\r\n    }\r\n\r\n    addCarPart = () =>{\r\n        this.props.history.push(\"/addParts/\" + this.state.order.id);\r\n    }\r\n\r\n    getOrderByParamsId = () => {\r\n\r\n        axios.get('/orders/total_to_pay/' + this.props.match.params.id)\r\n            .then((response) => {\r\n\r\n                this.amountToPay = response.data;\r\n            })\r\n            .then(() => {\r\n                    axios.get('/orders/' + this.props.match.params.id)\r\n                    .then((response) => {\r\n                        // console.log(response.data)\r\n                        const updatedProductForm = {\r\n                            ...this.state.order\r\n                        };\r\n        \r\n                        for (let field in response.data) {\r\n                            let updatedFormElement = {\r\n                                ...updatedProductForm[field]\r\n                            };\r\n                            updatedFormElement = response.data[field];\r\n                            updatedProductForm[field] = updatedFormElement;\r\n                        }\r\n                        updatedProductForm.amountToPay = this.amountToPay;\r\n                        \r\n                        this.setState({...this.state, order: updatedProductForm ,\r\n                            sortedFilteredListWork:  response.data.works,\r\n                            sortedFilteredListPart: response.data.partCounts\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n\r\n                }\r\n            )\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n        \r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.match.params.id) {\r\n            // console.log('id is ' + this.props.match.params.id)\r\n            this.getOrderByParamsId();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const juser = JSON.parse(localStorage.getItem('user'));\r\n\r\n        const workBody = this.state.sortedFilteredListWork.slice(this.state.workBeginIndex, this.state.workEndIndex).map( item => {\r\n\r\n            return (\r\n           \r\n                <ListWorkForOrder \r\n                    key={item.id}\r\n                    name={item.workName}\r\n                    desc={item.description.slice(0, 50)}\r\n                    price={item.price}\r\n                    done={item.workDone}\r\n                    closeWork={() => this.closeWork(item.id)}\r\n                    user={item.userName}\r\n                    juser={juser}\r\n                    remove={() => this.removeWork(item.id)}\r\n                    closed={this.state.order.orderClosed}\r\n                    changeUser={() => this.changeUser(item.id)}\r\n                />\r\n            )\r\n        });\r\n\r\n        const workBlock = ( \r\n            \r\n            <table border=\"1\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"name\"  onClick={() => this.sortMyWorkList('name')} >робота &#8645;</th> \r\n                        <th className=\"price\" >цiна</th>\r\n                        <th className=\"user\"  onClick={() => this.sortMyWorkList('doneBy')} >Зробив &#8645;</th>\r\n                        <th className=\"desc\" style={(this.state.order.orderClosed || juser.role === 'ROLE_ADMIN') ? {display: 'none'} : {}} >опiсанiе</th>\r\n                        <th className=\"done\" onClick={() => this.sortMyWorkList('ifDone')}>&#8645;</th>\r\n                        <th className=\"done\" style={(juser.role === 'ROLE_ADMIN' && !this.state.order.orderClosed) ? {} : {display: 'none'}} >Удалити</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {workBody}  \r\n                </tbody>\r\n            </table>\r\n        \r\n\r\n        );\r\n\r\n\r\n        const partBody = this.state.sortedFilteredListPart.slice(this.state.partBeginIndex, this.state.partEndIndex).map( item => {\r\n\r\n            return (\r\n           \r\n                <ListPartForOrder\r\n                    key={item.id}\r\n                    name={item.partName}\r\n                    desc={item.description.slice(0, 50)}\r\n                    amount={item.amount}\r\n                    totalPrice={item.retailPrice * item.amount}\r\n                    juser={juser}\r\n                    remove={() => this.removePartCount(item.id)}\r\n                    closed={this.state.order.orderClosed}\r\n                />\r\n                \r\n            )\r\n        });\r\n\r\n        const partBlock = ( \r\n            \r\n            <table border=\"1\" >\r\n                <tbody>\r\n                    <tr>\r\n                        <th className=\"name\"  onClick={() => this.sortMyPartList()} >запчасть &#8645;</th>\r\n                        <th className=\"done\" >колiчество </th> \r\n                        <th className=\"price\" > обща цiна</th>\r\n                        <th className=\"user\" style={(this.state.order.orderClosed || juser.role === 'ROLE_ADMIN') ? {display: 'none'} : {}} >опiсанiе</th>\r\n                        <th className=\"done\" style={(juser.role === 'ROLE_ADMIN' && !this.state.order.orderClosed) ? {} : {display: 'none'}} >Удалити</th>\r\n                    </tr>\r\n                </tbody>\r\n                <tbody>\r\n                    {partBody}  \r\n                </tbody>\r\n            </table>\r\n        \r\n\r\n        );\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div >\r\n                <div className=\"for-div\">\r\n                    <h3 className=\"tt1\">Заказ: {this.state.order.id}</h3>\r\n                    <h3 className={this.state.order.orderClosed ? \"ml-auto closed\" : \"ml-auto open\"}>{this.state.order.orderClosed ? \"закритий\" : \"одкритий\"}</h3>\r\n                </div>\r\n                \r\n\r\n                <div className=\"form-group try-border\">\r\n                        <label\r\n                            className={ \"control-label label-for-buttons\"}><h4>Клiент:</h4>\r\n                            </label>\r\n\r\n                            <ShowCustomerInOrder upper={this.state.order.customer.firstName + ' ' + this.state.order.customer.lastName}\r\n                            left={this.state.order.customer.telNumber}\r\n                            right={this.state.order.customer.email}/>\r\n\r\n                </div>\r\n\r\n                <div className=\"form-group try-border\">\r\n                        <label\r\n                            className={ \"control-label label-for-buttons\"}><h4>Машина:</h4>\r\n                            </label>\r\n\r\n                            <ShowCustomerInOrder upper={this.state.order.car.carMade}\r\n                            left={this.state.order.car.licencePlate}\r\n                            right={this.state.order.car.vinCode}/>\r\n\r\n                </div>\r\n\r\n                <h4 className=\"date\">Заказ одкритий: {date.format(new Date(this.state.order.orderOpened), 'DD. MM. YYYY. - HH:mm')  }</h4>\r\n\r\n                <h4 className=\"date\"  style={this.state.order.orderClosed ? {} : {display: 'none'}}>Заказ закритий:   {date.format(new Date(this.state.order.orderClosed), 'DD. MM. YYYY. - HH:mm')  }</h4>\r\n\r\n                <h4 className=\"date\">Cyмма предоплати: {this.state.order.amountPayedInAdvance}</h4>\r\n                <h4 className=\"date\">{this.state.order.orderClosed ? 'Оплачено:' : 'Довг:'} {this.state.order.amountToPay.toLocaleString(undefined, {maximumFractionDigits:2})}</h4>\r\n\r\n                <h4 className=\"date\">Проблема: {this.state.order.problem}</h4>\r\n\r\n                <div style={(juser.role === 'ROLE_ADMIN' || this.state.order.orderClosed) ? {display: 'none'} : {}}>\r\n                    <hr/>\r\n                    <button className=\"btn btn-info my-button\" onClick={() => this.addNewWork()}>Добавити роботу</button>\r\n                    <button className=\"btn btn-info my-button\" onClick={() => this.addCarPart()}>Добавити запчасть</button> \r\n                    <button className=\"btn btn-info my-button\" onClick={() => this.payFor()} style={this.state.order.payedFor ? {display: 'none'} : {}}>Оплатити</button>\r\n                    <h4 className=\"btn btn-success my-button\" style={this.state.order.payedFor ? {} : {display: 'none'}}>Оплачено</h4>\r\n                    <button className=\"btn btn-info my-button\" onClick={() => this.closeOrder()}>Закрити</button>\r\n                    <hr/>\r\n                </div>\r\n\r\n                <div style={this.state.order.orderClosed ? {} : {display: 'none'}}>\r\n                    <hr/>\r\n                    <button className=\"btn btn-success my-button\" onClick={() => this.getReceipt()}>Щот за роботу</button>\r\n                    <hr/>\r\n                </div>\r\n                \r\n\r\n                <br/>\r\n                <br/>\r\n                <h4>Роботи:</h4>\r\n                            <div style={(this.state.order.works.length < 6) ? {display: 'none'} : {}}>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.workFileteredBy}\r\n                                    onChange={this.filterMyWorkList}\r\n                                    placeholder={'Назва роботи'}\r\n                                />\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShowWork}\r\n                                    onChange={this.changeWorkListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                {workBlock}\r\n\r\n                <div style={(this.state.order.works.length < 6) ? {display: 'none'} : {}}>\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.workPaginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.workBeginIndex + 1} - {this.state.workEndIndex}</strong>\r\n                    <strong onClick={this.workPaginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n\r\n                <br/>\r\n                <hr/>\r\n                <br/>\r\n                <h4>Запчастi:</h4>\r\n\r\n                            <div style={(this.state.order.partCounts.length < 6) ? {display: 'none'} : {}}>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.partFileteredBy}\r\n                                    onChange={this.filterMyPartList}\r\n                                    placeholder={'Назва запчастi'}\r\n                                />\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShowPart}\r\n                                    onChange={this.changePartListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                {partBlock}\r\n\r\n                <div style={(this.state.order.partCounts.length < 6) ? {display: 'none'} : {}}>\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.partPaginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.partBeginIndex + 1} - {this.state.partEndIndex}</strong>\r\n                    <strong onClick={this.partPaginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Order;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass WorksPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Роботи - Г а р а ж';\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Роботи</h1>\r\n\r\n                        <div  >\r\n                                <Link to=\"/addWork\">\r\n                                    <button className=\"btn-success my-button\">Свторити роботу</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/worksList\">\r\n                                    <button className=\" btn-success my-button\">Список робот</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/\">\r\n                                    <button className=\" btn-success my-button \">Найти роботу</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default WorksPage;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass AddWork extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Нова робота - Г а р а ж';\r\n        // console.log(this.context.router.history);\r\n    }\r\n\r\n\r\n\r\n    state = {\r\n        newWorkForm: {\r\n            name: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            price: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    inputChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const updatedCustomerForm = {\r\n            ...this.state.newWorkForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedCustomerForm[target.name]\r\n        };\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.isValid = true;\r\n        updatedCustomerForm[target.name] = updatedFormElement;\r\n\r\n        this.setState({...this.state, newWorkForm: updatedCustomerForm});\r\n\r\n    };\r\n\r\n\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.newWorkForm) {\r\n            formData[formElementIdentifier] = this.state.newWorkForm[formElementIdentifier].value;\r\n        }\r\n\r\n        let url = '/work';\r\n        let method = 'post';\r\n        const id = this.props.match.params.id;\r\n        if (id) {\r\n            url += '/' + id;\r\n            method = 'put';\r\n        }\r\n\r\n        axios({method: method, url: url, data: formData})\r\n            .then(() => {\r\n                this.setState({\r\n                    newWorkForm: {\r\n                        name: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        description: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        price: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/worksList');\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n    hideMessage = () => {\r\n        \r\n    };\r\n\r\n\r\n    validationHandler = (error) => {\r\n        const updatedCategoryForm = {\r\n            ...this.state.newWorkForm\r\n        };\r\n\r\n        for (let field in this.state.newWorkForm) {\r\n            const updatedFormElement = {\r\n                ...updatedCategoryForm[field]\r\n            };\r\n            updatedFormElement.isValid = true;\r\n            updatedFormElement.message = '';\r\n            updatedCategoryForm[field] = updatedFormElement;\r\n        }\r\n\r\n        if (error.response.data.hasOwnProperty('fieldErrors')) {\r\n            for (let fieldError of error.response.data.fieldErrors) {\r\n                const updatedFormElement = {\r\n                    ...updatedCategoryForm[fieldError.field]\r\n                };\r\n                updatedFormElement.isValid = false;\r\n                updatedFormElement.message = fieldError.message;\r\n                updatedCategoryForm[fieldError.field] = updatedFormElement;\r\n            }\r\n\r\n            this.setState({...this.state, newWorkForm: updatedCategoryForm});\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                newWorkForm: {\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Please don\\'t mess with my input fields'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    getWorkByParamsId = () => {\r\n        axios.get('/work/' + this.props.match.params.id)\r\n            .then((response) => {\r\n                const updatedProductForm = {\r\n                    ...this.state.newWorkForm\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    const updatedFormElement = {\r\n                        ...updatedProductForm[field]\r\n                    };\r\n                    updatedFormElement.value = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, newWorkForm: updatedProductForm});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.match.params.id) {\r\n            this.getWorkByParamsId();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2> {this.props.match.params.id != null ? \"Змынити\" : \"Нова\"}  Робот{this.props.match.params.id != null ? \"у\" : \"а\"}</h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newWorkForm.name.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                        Назва роботи:</label>\r\n                        <input\r\n                            className={this.state.newWorkForm.name.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"name\"\r\n                            value={this.state.newWorkForm.name.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newWorkForm.name.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newWorkForm.description.isValid ? \"control-label textarea-lable\" : \"control-label input-label invalid-label\"}>Описанiе:</label>\r\n                        {/* <input\r\n                            className={this.state.newPartForm.description.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"description\"\r\n                            value={this.state.newPartForm.description.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        /> */}\r\n                        <textarea className={\"my-textarea\"}\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            value={this.state.newWorkForm.description.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newWorkForm.description.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group \">\r\n                        <label\r\n                            className={this.state.newWorkForm.price.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>Продажна цiна:</label>\r\n                        <input\r\n                            className={this.state.newWorkForm.price.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0.01\"\r\n                            id=\"price\"\r\n                            name=\"price\"\r\n                            value={this.state.newWorkForm.price.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newWorkForm.price.message}</span>\r\n                    </div>\r\n                    \r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Сохранити</button>\r\n\r\n                \r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default AddWork;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ListPartComponent from '../../components/ListPart/ListPartComponent'\r\nimport '../../components/ListPart/ListPartComponent.css'\r\n\r\n\r\nclass WorkList extends Component{\r\n\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    left = '<<<';\r\n    right = '>>>'\r\n\r\n    state = {\r\n\r\n        sorted: '',\r\n\r\n        incoming: [],\r\n\r\n        sortedFilteredList: [],\r\n\r\n        fileteredBy: '',\r\n\r\n        itemsToShow: 10,\r\n\r\n        beginIndex: 0,\r\n\r\n        endIndex: 10\r\n    };\r\n\r\n    editWork = (id) => {\r\n         this.props.history.push(\"/editWork/\" + id);\r\n    };\r\n \r\n     deleteWork = (id) =>{ \r\n         console.log('deleting ' + id);\r\n    };\r\n \r\n     addWork = (idOfWork) =>{ \r\n        //  console.log('adding ' + idOfWork);\r\n         if (this.props.match.params.id) {\r\n            // console.log('adding ' + this.props.match.params.id);\r\n\r\n            axios.post('/orders/work/' + idOfWork + '/' + this.props.match.params.id)\r\n            .then(response => {\r\n               // console.log(response);\r\n                // this.setState({incoming: response.data,\r\n                //     sortedFilteredList: response.data});\r\n                this.props.history.push(\"/order/\" + this.props.match.params.id);\r\n            })\r\n            .catch(error => {\r\n                // console.log('hello' + error);\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n                // this.props.history.push('/login');\r\n            })\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    sortMyList = (type) => {\r\n        //   console.log('sorting by ' + type)\r\n           var updatableList = [...this.state.sortedFilteredList];\r\n   \r\n          \r\n           if (type === 'name' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'name' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.name.toLowerCase() < b.name.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'price' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.retailPrice > b.retailPrice) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'price' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.retailPrice < b.retailPrice) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n    }\r\n\r\n    filterMyList = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.name.includes(value) ||\r\n         item.name.toLowerCase().includes(value) || item.name.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state, \r\n            fileteredBy: value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n    changeListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShow: value});\r\n        }\r\n    }\r\n\r\n    paginatorLeft = () => {\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                beginIndex: 0,\r\n                endIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    paginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.endIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                beginIndex: newBegIndexInt,\r\n                endIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n\r\n\r\n    getWorks = () => {\r\n\r\n        axios.get('/work')\r\n            .then(response => {\r\n               // console.log(response);\r\n                this.setState({incoming: response.data,\r\n                    sortedFilteredList: response.data});\r\n            })\r\n            .catch(error => {\r\n                // console.log('hello' + error);\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n                // this.props.history.push('/login');\r\n            })\r\n    };\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getWorks();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const juser = JSON.parse(localStorage.getItem('user'));\r\n\r\n        const listOfParts = this.state.sortedFilteredList.slice(this.state.beginIndex, this.state.endIndex).map( item => {\r\n\r\n            return (\r\n           \r\n                <ListPartComponent \r\n                    key={item.id}\r\n                    name={item.name}\r\n                    desc={item.description}\r\n                    price={item.price}\r\n                    edit={() => this.editWork(item.id)}\r\n                    delete={() => this.deleteWork(item.id)}\r\n                    juser={juser}\r\n                    add={() => this.addWork(item.id)}\r\n                />\r\n            )\r\n        });\r\n\r\n        const header = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"n\"  onClick={() => this.sortMyList('name')}>Назва &#8645;</th>\r\n                            <th className=\"p\" onClick={() => this.sortMyList('price')}>цiна &#8645;</th>\r\n                            <th className=\"edit\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}} ></th>\r\n                            <th className=\"delete\" style={juser.role === 'ROLE_USER' ? {display: 'none'} : {}}></th>\r\n                            <th className=\"add\" style={juser.role === 'ROLE_USER' ? {} : {display: 'none'}}></th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"form-group\">\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.fileteredBy}\r\n                                    onChange={this.filterMyList}\r\n                                    placeholder={'Find By'}\r\n                                />\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShow}\r\n                                    onChange={this.changeListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                  \r\n                </div>\r\n                {header}\r\n                {listOfParts}\r\n\r\n                <br/>\r\n                \r\n                <div >\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.paginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.beginIndex + 1} - {this.state.endIndex}</strong>\r\n                    <strong onClick={this.paginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default WorkList;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddCarPartToOrder extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Додати запчасть - Г а р а ж';\r\n        console.log(props);\r\n    }\r\n\r\n    state = {\r\n        part: {\r\n            id: '',\r\n\t        name: '',\r\n\t        description: '',\r\n\t        retailPrice: ''\r\n        },\r\n\r\n        amount: '',\r\n        totalPrice: ''\r\n    };\r\n\r\n    inputChangeHandler = (event) => {\r\n        const target = event.target;\r\n\r\n        const price = this.state.part.retailPrice\r\n\r\n        // console.log(price)\r\n\r\n        let newAmount = target.value;\r\n\r\n\r\n        const amountInt = parseInt(newAmount);\r\n        const priceInt = parseInt(price);\r\n        const total = amountInt * priceInt;\r\n        \r\n        this.setState({...this.state, amount: newAmount,\r\n            totalPrice: total});\r\n    };\r\n\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n\r\n        formData.partId = this.state.part.id;\r\n        formData.amount = this.state.amount;\r\n\r\n        const orderId = this.props.match.params.order;\r\n\r\n        let url = '/orders/part/' + orderId;\r\n        let method = 'post';\r\n\r\n        axios({method: method, url: url, data: formData})\r\n            .then(() => {\r\n                this.setState({\r\n                    part: {\r\n                        id: '',\r\n                        name: '',\r\n                        description: '',\r\n                        retailPrice: ''\r\n                    },\r\n            \r\n                    amount: '',\r\n                    totalPrice: ''\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/order/' + orderId);\r\n                \r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    getPartByParamsId = () => {\r\n        axios.get('/parts/' + this.props.match.params.part)\r\n            .then((response) => {\r\n                // console.log(response.data)\r\n\r\n                const updatedProductForm = {\r\n                    ...this.state.part\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    let updatedFormElement = {\r\n                        ...updatedProductForm[field]\r\n                    };\r\n                    updatedFormElement = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, part: updatedProductForm,\r\n                    totalPrice: response.data.retailPrice});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.match.params.part) {\r\n            // console.log('calling get ' + this.props.match.params.part)\r\n            this.getPartByParamsId();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        // console.log('adding part ' + this.props.match.params.part + ' to order ' + this.props.match.params.order) \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2> Додаю запчасть</h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={\"control-label input-label\"}>\r\n                        Назва запчастi:</label>\r\n                        <input disabled\r\n                            className={ \"form-control my-input-field\" }\r\n                            name=\"name\"\r\n                            value={this.state.part.name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={\"control-label textarea-lable\"}>Описанiе:</label>\r\n              \r\n                        <textarea className={\"my-textarea\"}\r\n                            disabled\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            value={this.state.part.description}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group \">\r\n                        <label\r\n                            className={\"control-label input-label\"}>Цiна запчастей:</label>\r\n                        <input disabled\r\n                            className={\"form-control my-input-field\"}\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0.01\"\r\n                            id=\"retailPrice\"\r\n                            name=\"retailPrice\"\r\n                            value={this.state.totalPrice ? this.state.totalPrice : this.state.part.retailPrice}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={ \"control-label input-label\" }>Колiчество запчастей:</label>\r\n                        <input\r\n                            className={ \"form-control my-input-field\"}\r\n                            type=\"number\"\r\n                            step=\"1\"\r\n                            min=\"1\"\r\n                            id=\"amount\"\r\n                            name=\"amount\"\r\n                            value={this.state.amount}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                       \r\n                    </div>\r\n                    \r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Додати</button>\r\n\r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default AddCarPartToOrder;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass OrderOpenOrClosed extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Робота - Г а р а ж';\r\n    }\r\n\r\n    openLink = '/ordersOf/open/' + this.props.match.params.car + '/' + this.props.match.params.cust;\r\n\r\n    closedLink = '/ordersOf/closed/' + this.props.match.params.car + '/' + this.props.match.params.cust;\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Запчасты</h1>\r\n\r\n             \r\n                        <div  >\r\n                                <Link to={this.openLink}>\r\n                                    <button className=\"btn-info my-button\">Одкритi закази</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to={this.closedLink}>\r\n                                    <button className=\" btn-success my-button \">Закритi закази</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default OrderOpenOrClosed;","import React, {Component} from 'react';\r\nimport date from 'date-and-time';\r\n\r\nclass ListOrderComponent extends Component{\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n           \r\n            <tr>\r\n                <td className=\"\"> {this.props.id} </td>\r\n                <td className=\"\" > {date.format(new Date(this.props.opened), 'DD. MM. YYYY. - HH:mm')  } </td>\r\n                <td className=\"\"  style={this.props.isClosed ? {} : {display: 'none'} } > {date.format(new Date(this.props.closed), 'DD. MM. YYYY. - HH:mm')  } </td>\r\n                <td className=\"\" > {this.props.total.toLocaleString(undefined, {maximumFractionDigits:2})}</td>\r\n                <td className=\"\" > <button   onClick={this.props.details}>Деталi</button> </td>\r\n            </tr> \r\n           \r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListOrderComponent;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport ListOrderComponent from '../../components/ListOrderComponent/ListOrderComponent';\r\nimport date from 'date-and-time';\r\n\r\n\r\n\r\nclass OrderList extends Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Закази - Г а р а ж';\r\n         \r\n    }\r\n\r\n\r\n    left = '<<<';\r\n    right = '>>>'\r\n\r\n    state = {\r\n\r\n        name: '',\r\n\r\n        sorted: '',\r\n\r\n        incoming: [],\r\n\r\n        sortedFilteredList: [],\r\n\r\n        beginDate: '1970-01-01',\r\n\r\n        endDate: '1970-01-01',\r\n\r\n        itemsToShow: 10,\r\n\r\n        beginIndex: 0,\r\n\r\n        endIndex: 10,\r\n\r\n        closedOrders: false\r\n    };\r\n\r\n    openOrder = (id) =>{\r\n        this.props.history.push(\"/order/\" + id);\r\n    }\r\n\r\n    totalToPay = (works, partCounts, amountPayedInAdvance) =>{\r\n        let total = 0;\r\n        total -= amountPayedInAdvance;\r\n\r\n        works.map(item =>{\r\n            if (item.workDone){\r\n                total += item.price;\r\n            }\r\n            return total;\r\n        })\r\n        partCounts.map(item =>{\r\n                total += (item.retailPrice * item.amount);\r\n                return total;      \r\n        })\r\n        \r\n       return total;\r\n    }\r\n\r\n    paginatorLeft = () => {\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                beginIndex: 0,\r\n                endIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    paginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.endIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                beginIndex: newBegIndexInt,\r\n                endIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n    changeListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShow: value});\r\n        }\r\n    }\r\n\r\n    sortMyList = (type) => {\r\n        //   console.log('sorting by ' + type)\r\n           var updatableList = [...this.state.sortedFilteredList];\r\n   \r\n          \r\n           if (type === 'number' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.id > b.id) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'number' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.id < b.id) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'close' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.orderClosed > b.orderClosed) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'close' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.orderClosed < b.orderClosed) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n    }\r\n\r\n    setBegindDate = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.orderOpened >= value && item.orderOpened <= this.state.endDate + 'Z');\r\n\r\n        // console.log(result)\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state,\r\n            beginDate:  value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow\r\n            });\r\n\r\n    };\r\n\r\n    setEndDate = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        // console.log(value)\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.orderOpened >= this.state.beginDate && item.orderOpened <= value + 'Z') ;\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state,\r\n            endDate:  value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow\r\n            });\r\n\r\n    };\r\n\r\n    setStateFromResponseForCar = (response) =>{\r\n        let _name = '';\r\n        let _begDate = '1970-01-01';\r\n        let _endDate = '1970-01-01';\r\n        if(response.data.length !== 0){\r\n            _name = response.data[0].car.carMade;\r\n            _begDate = response.data[0].orderOpened;\r\n            _endDate = response.data[response.data.length - 1].orderOpened;\r\n        }\r\n        this.setState({incoming: response.data,\r\n            sortedFilteredList: response.data,\r\n            closedOrders: true,\r\n            name: _name,\r\n            beginDate: date.format(new Date(_begDate), 'YYYY-MM-DD'),\r\n            endDate: date.format(new Date(_endDate), 'YYYY-MM-DD')\r\n            });\r\n    }               \r\n\r\n    setStateFromResponseForCustomer = (response) =>{\r\n        let _name = '';\r\n        let _begDate = '1970-01-01';\r\n        let _endDate = '1970-01-01';\r\n        if(response.data.length !== 0){\r\n            _name = response.data[0].customer.firstName + ' ' + response.data[0].customer.lastName;\r\n            _begDate = response.data[0].orderOpened;\r\n            _endDate = response.data[response.data.length - 1].orderOpened;\r\n        }\r\n        this.setState({incoming: response.data,\r\n            sortedFilteredList: response.data,\r\n            closedOrders: true,\r\n            name: _name,\r\n            beginDate: date.format(new Date(_begDate), 'YYYY-MM-DD'),\r\n            endDate: date.format(new Date(_endDate), 'YYYY-MM-DD')\r\n            });\r\n    }               \r\n    \r\n    getClosedOrdersbyCar = () =>{\r\n        axios.get('/orders/car/closed/' + this.props.match.params.car)\r\n                    .then((response) => {\r\n                        // console.log(response.data)\r\n                        this.setStateFromResponseForCar(response);\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n    }\r\n\r\n    getOpenedOrdersbyCar = () =>{\r\n        axios.get('/orders/car/open/' + this.props.match.params.car)\r\n                    .then((response) => {\r\n                        // console.log(response.data)\r\n                        this.setStateFromResponseForCar(response);\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n    }\r\n\r\n    getClosedOrdersbyCustomer = () =>{\r\n        axios.get('/orders/customer/closed/' + this.props.match.params.cust)\r\n                    .then((response) => {\r\n                        // console.log(response.data)\r\n                        this.setStateFromResponseForCustomer(response);\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n    }\r\n\r\n    getOpenedOrdersbyCustomer = () =>{\r\n        axios.get('/orders/customer/open/' + this.props.match.params.cust)\r\n                    .then((response) => {\r\n                        // console.log(response.data)\r\n                        this.setStateFromResponseForCustomer(response);\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        if(this.props.match.params.state === 'open'){\r\n\r\n            if(this.props.match.params.car === 'x'){\r\n                // console.log('getting open order of cust ' + this.props.match.params.cust)\r\n                this.getOpenedOrdersbyCustomer();\r\n            }else{\r\n                // console.log('getting open order of car ' + this.props.match.params.car);\r\n                this.getOpenedOrdersbyCar();\r\n            }\r\n\r\n        }else if(this.props.match.params.state === 'closed'){\r\n\r\n            if(this.props.match.params.car === 'x'){\r\n                // console.log('getting closed order of cust ' + this.props.match.params.cust)\r\n                this.getClosedOrdersbyCustomer();\r\n            }else{\r\n                // console.log('getting closed order of car ' + this.props.match.params.car)\r\n                this.getClosedOrdersbyCar();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        // const { detect } = require('detect-browser');\r\n        // const browser = detect();\r\n        // console.log(browser.name + ' ' + browser.version  + ' ' + browser.os + 'Android OS')\r\n\r\n\r\n        const listOfOrders = this.state.sortedFilteredList.slice(this.state.beginIndex, this.state.endIndex).map( item => {\r\n\r\n            return (\r\n                <ListOrderComponent \r\n                    key={item.id}\r\n                    id={item.id}\r\n                    opened={item.orderOpened}\r\n                    closed={item.orderClosed}\r\n                    details={() => this.openOrder(item.id)}\r\n                    isClosed={this.state.closedOrders}\r\n                    total={this.totalToPay(item.works, item.partCounts, item.amountPayedInAdvance)}\r\n                    \r\n                />\r\n            )\r\n        });\r\n\r\n        const myTable = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"\"  onClick={() => this.sortMyList('number')}>Номер &#8645;</th>\r\n                            <th className=\"\"  >Одкритий </th>\r\n                            <th className=\"\" onClick={() => this.sortMyList('close')} style={this.state.closedOrders ? {} : {display: 'none'} } >Закритий &#8645;</th>\r\n                            <th className=\"\"  >{this.state.closedOrders ? 'Оплачено' : 'Довг' } </th>\r\n                            <th className=\"\" >Деталi</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {listOfOrders} \r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n        return(\r\n            <div>\r\n                \r\n                <h2> {this.props.match.params.state === 'open' ? \"Одкритi\" : \"Закритi\"}  закази {this.state.name}</h2>\r\n                <hr/>\r\n                <br/>\r\n\r\n                <div className=\"form-group\">\r\n                            <div>\r\n                               \r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShow}\r\n                                    onChange={this.changeListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label\r\n                                    className=\"control-label\">\r\n                                    Одкритi мiж : </label>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field-3\" \r\n                                    name=\"from\"\r\n                                    type=\"date\"\r\n                                    date-inline-picker=\"true\"\r\n                                    value={this.state.beginDate}\r\n                                    onChange={this.setBegindDate}\r\n                                    placeholder={'from'}\r\n                                />\r\n\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label\">\r\n                                     i :</label>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field-4\" \r\n                                    name=\"till\"\r\n                                    type=\"date\"\r\n                                    value={this.state.endDate}\r\n                                    onChange={this.setEndDate}\r\n                                    placeholder={'till'}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                  \r\n                </div>\r\n                {myTable}\r\n    \r\n\r\n                <br/>\r\n                \r\n                <div >\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.paginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.beginIndex + 1} - {this.state.endIndex}</strong>\r\n                    <strong onClick={this.paginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default OrderList;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UsersPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Пользователi - Г а р а ж';\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Пользователi</h1>\r\n\r\n                        <div  >\r\n                                <Link to=\"/addUser\">\r\n                                    <button className=\"btn-success my-button\">Свторити пользователя</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/userList\">\r\n                                    <button className=\"btn-success my-button\">Список пользователю</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    \r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default UsersPage;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddUser extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Новий пользователь - Г а р а ж';\r\n        // console.log(props);\r\n    }\r\n\r\n\r\n    state = {\r\n        newUserForm: {\r\n            name: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            role: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            }\r\n        },\r\n        roles: []\r\n    };\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.newUserForm) {\r\n            formData[formElementIdentifier] = this.state.newUserForm[formElementIdentifier].value;\r\n        }\r\n\r\n        // console.log(formData)\r\n\r\n        let url = '/users';\r\n        let method = 'post';\r\n        const id = this.props.match.params.id;\r\n        if (id) {\r\n            url += '/' + id;\r\n            method = 'put';\r\n        }\r\n\r\n        axios({method: method, url: url, data: formData})\r\n            .then(() => {\r\n                this.setState({\r\n                    newUserForm: {\r\n                        id: {\r\n                            value: '',\r\n                        },\r\n                        name: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        password: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        role: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/userList');\r\n                setTimeout(this.hideMessage, 1500);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n    hideMessage = () => {\r\n        \r\n    };\r\n\r\n    validationHandler = (error) => {\r\n        const updatedCategoryForm = {\r\n            ...this.state.newUserForm\r\n        };\r\n\r\n        for (let field in this.state.newUserForm) {\r\n            const updatedFormElement = {\r\n                ...updatedCategoryForm[field]\r\n            };\r\n            updatedFormElement.isValid = true;\r\n            updatedFormElement.message = '';\r\n            updatedCategoryForm[field] = updatedFormElement;\r\n        }\r\n\r\n        if (error.response.data.hasOwnProperty('fieldErrors')) {\r\n            for (let fieldError of error.response.data.fieldErrors) {\r\n                const updatedFormElement = {\r\n                    ...updatedCategoryForm[fieldError.field]\r\n                };\r\n                updatedFormElement.isValid = false;\r\n                updatedFormElement.message = fieldError.message;\r\n                updatedCategoryForm[fieldError.field] = updatedFormElement;\r\n            }\r\n\r\n            this.setState({...this.state, newUserForm: updatedCategoryForm});\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                newUserForm: {\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Please don\\'t mess with my input fields'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n   \r\n\r\n    inputChangedHandler = (event) => {\r\n        const target = event.target;\r\n\r\n        const updatedUser = {\r\n            ...this.state.newUserForm\r\n        };\r\n\r\n        updatedUser[target.name].value = target.value;\r\n\r\n        this.setState({newUserForm: updatedUser});\r\n\r\n    }\r\n\r\n\r\n    getUserByParamsId = () => {\r\n        axios.get('/users/' + this.props.match.params.id)\r\n            .then((response) => {\r\n                // console.log(response)\r\n                const updatedProductForm = {\r\n                    ...this.state.newUserForm\r\n                };\r\n\r\n                for (let field in response.data) {\r\n                    const updatedFormElement = {\r\n                        ...updatedProductForm[field]\r\n                    };\r\n                    updatedFormElement.value = response.data[field];\r\n                    updatedProductForm[field] = updatedFormElement;\r\n                }\r\n\r\n                this.setState({...this.state, newUserForm: updatedProductForm});\r\n            })\r\n            .catch(error => {\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n            })\r\n    };\r\n\r\n    componentDidMount(){\r\n\r\n        if(this.props.match.params.id){\r\n            axios.get('/users/roles')\r\n            .then((response) => {\r\n                this.setState({\r\n                    roles: response.data\r\n                })\r\n            });\r\n        this.getUserByParamsId();\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // console.log(this.state)\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2> {this.props.match.params.id != null ? \"Змiнити\" : \"Новий\"}  пользователь{this.props.match.params.id != null ? \"а\" : \"\"} </h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.newUserForm.name.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                        Лонiн:</label>\r\n                        <input\r\n                            className={this.state.newUserForm.name.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"name\"\r\n                            value={this.state.newUserForm.name.value}\r\n                            onChange={this.inputChangedHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newUserForm.name.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\" style={this.props.match.params.id ?  {display: 'none'} : {}}>\r\n                        <label\r\n                            className={this.state.newUserForm.password.isValid ? \"control-label textarea-lable\" : \"control-label input-label invalid-label\"}>Пароль:</label>\r\n                        <input\r\n                            \r\n                            className={this.state.newUserForm.password.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={this.state.newUserForm.password.value}\r\n                            onChange={this.inputChangedHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.newUserForm.password.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group \" style={this.props.match.params.id ?  {} : {display: 'none'}}>\r\n                        <label\r\n                            className={this.state.newUserForm.role.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>Права:</label>\r\n                        <select name=\"role\"\r\n                        \r\n\r\n                        value={this.state.newUserForm.role.value}\r\n                        onChange={this.inputChangedHandler}\r\n                        className=\"my-input-field\">\r\n\r\n                            {Object.entries(this.state.roles).map(([key, value]) => {\r\n                                return <option key={key} value={key}>{value}</option>\r\n                            })}\r\n                        </select> \r\n                        <span className=\"form-text invalid-feedback\">{this.state.newUserForm.role.message}</span>\r\n                    </div>\r\n                    \r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Сохранити</button>\r\n\r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default AddUser;","import React, {Component} from 'react';\r\n\r\n\r\nclass ListUserComponent extends Component{\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n                 \r\n            <tr>\r\n                <td className=\"\">{this.props.name}</td>\r\n                <td className=\"\">{this.props.role === 'ROLE_ADMIN' ? \"адмiн\" : \"майстер\"}</td>\r\n                <td className=\"\" style={this.props.workId === undefined ?  {} : {display: 'none'}}>  <button   onClick={this.props.edit}>Iзмiнити</button> </td>\r\n                <td className=\"\" style={this.props.workId === undefined ?  {} : {display: 'none'}}>  <button   onClick={this.props.delete}>удалити</button> </td>\r\n                <td className=\"\" style={this.props.workId === undefined ?  {display: 'none'} : {}}>  <button   onClick={this.props.select}>вибрати</button> </td>\r\n                <td className=\"\" style={this.props.workId === undefined ?  {} : {display: 'none'}}>  <button   onClick={this.props.report}>отчот</button> </td>\r\n            </tr> \r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ListUserComponent;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport ListUserComponent from '../../components/ListUsers/ListUserComponent';\r\n\r\n\r\nclass UserList extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Пользователi - Г а р а ж';\r\n         \r\n    }\r\n\r\n\r\n    left = '<<<';\r\n    right = '>>>'\r\n\r\n    state = {\r\n\r\n        sorted: '',\r\n\r\n        incoming: [],\r\n\r\n        sortedFilteredList: [],\r\n\r\n        fileteredBy: '',\r\n\r\n        itemsToShow: 5,\r\n\r\n        beginIndex: 0,\r\n\r\n        endIndex: 5\r\n    };\r\n\r\n\r\n    editUser = (id) =>{ \r\n        // console.log('editing ' + id);\r\n        this.props.history.push(\"/editUser/\" + id);\r\n    }\r\n\r\n    deleteUser = (id) =>{ \r\n        // console.log('delete ' + id);\r\n        axios.delete('/users/' + id)\r\n        .then((response) => {\r\n            // console.log(response)\r\n            \r\n            this.setState({incoming: response.data,\r\n                sortedFilteredList: response.data});\r\n        })\r\n        .catch(error => {\r\n            this.setState(() => {\r\n                throw error;\r\n            })\r\n        })\r\n    }\r\n\r\n    selectUser = (id) =>{ \r\n        // console.log('select ' + id);\r\n        axios.post('/users/' + id + '/' + this.props.match.params.id)\r\n                    .then(() => {\r\n                        this.props.history.push(\"/order/\" + this.props.match.params.order);\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState(() => {\r\n                            throw error;\r\n                        })\r\n                    })\r\n    }\r\n\r\n    reportOfUser = (id) =>{ \r\n        console.log('report ' + id);\r\n    }\r\n\r\n    sortMyList = (type) => {\r\n        //   console.log('sorting by ' + type)\r\n           var updatableList = [...this.state.sortedFilteredList];\r\n   \r\n          \r\n           if (type === 'name' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'name' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.name.toLowerCase() < b.name.toLowerCase()) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'role' && (this.state.sorted === '' || this.state.sorted === 'desc') ){\r\n               const result = updatableList.sort((a, b) => (a.role > b.role) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'asc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n   \r\n           if (type === 'role' && this.state.sorted === 'asc' ){\r\n               const result = updatableList.sort((a, b) => (a.role < b.role) ? 1 : -1 );\r\n   \r\n               this.setState({...this.state,\r\n                   sorted: 'desc' , \r\n                   sortedFilteredList: result });\r\n   \r\n           }\r\n\r\n          \r\n    }\r\n\r\n    filterMyListByName = (event) => {\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        const updatableList = [...this.state.incoming];\r\n\r\n        const result = updatableList.filter((item) => item.name.includes(value) ||\r\n         item.name.toLowerCase().includes(value) || item.name.toUpperCase().includes(value));\r\n\r\n        const iToShow = [this.state.itemsToShow];\r\n\r\n        this.setState({...this.state, \r\n            fileteredBy: value,\r\n            sortedFilteredList: result,\r\n            endIndex: result.length < iToShow ? result.length : iToShow});\r\n\r\n    };\r\n\r\n\r\n    changeListSize = (event) =>{\r\n        const target = event.target;\r\n\r\n        let value;\r\n        value = target.value;\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const listSizeInt = parseInt(listSize);\r\n        const bIndexInt = parseInt(bIndex);\r\n        const valueInt = parseInt(value);\r\n        const eIndex = bIndexInt + valueInt;\r\n        \r\n        if(value !== '' && eIndex < listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: eIndex});\r\n        }else if(value !== '' && eIndex > listSizeInt){\r\n            this.setState({...this.state, \r\n                itemsToShow: value,\r\n                endIndex: listSizeInt});      \r\n        }else{\r\n            this.setState({...this.state, \r\n                itemsToShow: value});\r\n        }\r\n    }\r\n\r\n    paginatorLeft = () => {\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n\r\n        endIndexInt = begIndexInt;\r\n        begIndexInt = endIndexInt - sizeInt; \r\n\r\n        if (begIndexInt <= 0){\r\n            this.setState({...this.state, \r\n                beginIndex: 0,\r\n                endIndex: sizeInt}); \r\n        }else{\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n        \r\n    }\r\n\r\n    paginatorRight = () => {\r\n        \r\n\r\n        const listSize = this.state.sortedFilteredList.length;\r\n        const bIndex = [this.state.beginIndex];\r\n        const eIndex = [this.state.endIndex];\r\n        const size = [this.state.itemsToShow];\r\n\r\n        let begIndexInt = parseInt(bIndex);\r\n        let endIndexInt = parseInt(eIndex);\r\n        const sizeInt = parseInt(size);\r\n        const listSizeInt = parseInt(listSize); \r\n        \r\n        endIndexInt = endIndexInt + sizeInt;\r\n        begIndexInt = begIndexInt + sizeInt;      \r\n\r\n        if (endIndexInt <= listSizeInt){\r\n            this.setState({...this.state, \r\n                beginIndex: begIndexInt,\r\n                endIndex: endIndexInt});\r\n        }\r\n\r\n        else if(endIndexInt >= listSizeInt && begIndexInt < listSizeInt){\r\n            const newBegIndex = [this.state.endIndex];\r\n            const newBegIndexInt = parseInt(newBegIndex);\r\n            this.setState({...this.state, \r\n                beginIndex: newBegIndexInt,\r\n                endIndex: listSizeInt});\r\n        }\r\n  \r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n        axios.get('/users')\r\n            .then(response => {\r\n               // console.log(response);\r\n                this.setState({incoming: response.data,\r\n                    sortedFilteredList: response.data});\r\n            })\r\n            .catch(error => {\r\n                // console.log('hello' + error);\r\n                this.setState(() => {\r\n                    throw error;\r\n                })\r\n                // this.props.history.push('/login');\r\n            })\r\n    };\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        this.getUsers();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const listOfCars = this.state.sortedFilteredList.slice(this.state.beginIndex, this.state.endIndex).map( item => {\r\n\r\n            return (\r\n                <ListUserComponent \r\n                    key={item.id}\r\n                    name={item.name}\r\n                    role={item.role}\r\n                    edit={() => this.editUser(item.id)}\r\n                    delete={() => this.deleteUser(item.id)}\r\n                    select={() => this.selectUser(item.id)}\r\n                    report={() => this.reportOfUser(item.id)}\r\n                    workId={this.props.match.params.id}\r\n                  \r\n                />\r\n            )\r\n        });\r\n\r\n        const myTable = ( \r\n            \r\n                <table border=\"1\" >\r\n                    <thead>\r\n                        <tr>\r\n                            \r\n                            <th className=\"\"  onClick={() => this.sortMyList('name')}>Iмя &#8645;</th>\r\n                            <th className=\"\" onClick={() => this.sortMyList('role')}>права &#8645;</th>\r\n                            <th className=\"\"  style={this.props.match.params.id ? {display: 'none'} : {}} >Iзмiнити </th>\r\n                            <th className=\"\" style={this.props.match.params.id ? {display: 'none'} : {}} >удалити</th>\r\n                            <th className=\"\" style={this.props.match.params.id ? {} : {display: 'none'}}>вибрати</th>\r\n                            <th className=\"\" style={this.props.match.params.id ? {display: 'none'} : {}}>отчот</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listOfCars} \r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n        );\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"form-group\">\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control my-input-search-field\" \r\n                                    name=\"fileteredBy\"\r\n                                    value={this.state.fileteredByVin}\r\n                                    onChange={this.filterMyListByName}\r\n                                    placeholder={'Find By login'}\r\n                                />\r\n                                <strong>       </strong>\r\n                                <label\r\n                                    className=\"control-label input-search-label\">\r\n                                    Показувати:</label>\r\n                                <input\r\n                                    className=\"form-control my-input-paginator-field \" \r\n                                    name=\"itemsToShow\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    step=\"1\"\r\n                                    value={this.state.itemsToShow}\r\n                                    onChange={this.changeListSize}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            \r\n\r\n                  \r\n                </div>\r\n                {myTable}\r\n    \r\n\r\n                <br/>\r\n                \r\n                <div >\r\n                   {/* paginator code goes here */}\r\n                    <strong onClick={this.paginatorLeft}>{this.left}     </strong> \r\n                    <strong>{this.state.beginIndex + 1} - {this.state.endIndex}</strong>\r\n                    <strong onClick={this.paginatorRight}>     {this.right}</strong>\r\n\r\n                    <br/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default UserList;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass MyPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Моя сторiнка - Г а р а ж';\r\n    }\r\n\r\n    render(){\r\n\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        return (\r\n            <div>\r\n                <h1>Моя сторiнка - {user.name}</h1>\r\n\r\n                        <div  >\r\n                                <Link to=\"/changePassword\">\r\n                                    <button className=\"btn-success my-button\">Змiнити пароль</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    <br/>\r\n\r\n                        <div>\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn-success my-button\">Зробленi роботи</button>\r\n                                </Link>\r\n                        </div>\r\n\r\n                    \r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MyPage;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ChangePassword extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        document.title = 'Нова Машина - Г а р а ж';\r\n\r\n        // console.log(props);\r\n    }\r\n\r\n    state = {\r\n        changePasswordForm: {\r\n            oldPassword: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            newPasswordCheck: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            },\r\n            newPassword: {\r\n                value: '',\r\n                isValid: true,\r\n                message: ''\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    inputChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const updatedCarForm = {\r\n            ...this.state.changePasswordForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedCarForm[target.name]\r\n        };\r\n\r\n        let value;\r\n        value = target.value;\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.isValid = true;\r\n        updatedCarForm[target.name] = updatedFormElement;\r\n\r\n        this.setState({...this.state, changePasswordForm: updatedCarForm});\r\n\r\n    };\r\n\r\n    checkIfPasswordsMatch = () => {\r\n        \r\n        const password1 = {...this.state.changePasswordForm.newPasswordCheck};\r\n\r\n       const password2 = {...this.state.changePasswordForm.newPassword};\r\n        // console.log(password2)\r\n        if(password1.value === password2.value){\r\n            return true;\r\n        }else{\r\n            // console.log('passwords do not match')\r\n            this.setState({\r\n                changePasswordForm: {\r\n                    oldPassword: {\r\n                        value: '',\r\n                        isValid: true,\r\n                        message: ''\r\n                    },\r\n                    newPasswordCheck: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Паролi не похожi'\r\n                    },\r\n                    newPassword: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Паролi не похожi'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    postDataHandler = (event) => {\r\n        event.preventDefault();\r\n        // console.log('I was called 1 ')\r\n        let result = this.checkIfPasswordsMatch();\r\n        if (result){\r\n            // console.log('I was called')\r\n            this.postData();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    postData = () => {\r\n        // event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.changePasswordForm) {\r\n            formData[formElementIdentifier] = this.state.changePasswordForm[formElementIdentifier].value;\r\n        }\r\n\r\n\r\n        let url = '/users/password';\r\n        let method = 'post';\r\n    \r\n            axios({method: method, url: url, data: formData})\r\n            .then(() => {\r\n                this.setState({\r\n                    changePasswordForm: {\r\n                        oldPassword: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        newPasswordCheck: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        },\r\n                        newPassword: {\r\n                            value: '',\r\n                            isValid: true,\r\n                            message: ''\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.props.history.push('/logout');\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response.data.hasOwnProperty(\"fieldErrors\")) {\r\n                    this.validationHandler(error);\r\n                } else {\r\n                    this.setState(() => {\r\n                        throw error;\r\n                    })\r\n                }\r\n            });\r\n     \r\n    };\r\n\r\n    validationHandler = (error) => {\r\n        const updatedCategoryForm = {\r\n            ...this.state.changePasswordForm\r\n        };\r\n\r\n        for (let field in this.state.changePasswordForm) {\r\n            const updatedFormElement = {\r\n                ...updatedCategoryForm[field]\r\n            };\r\n            updatedFormElement.isValid = true;\r\n            updatedFormElement.message = '';\r\n            updatedCategoryForm[field] = updatedFormElement;\r\n        }\r\n\r\n        if (error.response.data.hasOwnProperty('fieldErrors')) {\r\n            for (let fieldError of error.response.data.fieldErrors) {\r\n                const updatedFormElement = {\r\n                    ...updatedCategoryForm[fieldError.field]\r\n                };\r\n                updatedFormElement.isValid = false;\r\n                updatedFormElement.message = fieldError.message;\r\n                updatedCategoryForm[fieldError.field] = updatedFormElement;\r\n            }\r\n\r\n            this.setState({...this.state, changePasswordForm: updatedCategoryForm});\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                changePasswordForm: {\r\n                    oldPassword: {\r\n                        value: '',\r\n                        isValid: false,\r\n                        message: 'Please don\\'t mess with my input fields'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2> Змiна пароля для {user.name}</h2>\r\n                <hr/>\r\n                <br/>\r\n                <form onSubmit={this.postDataHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.changePasswordForm.oldPassword.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                            Старий пароль:</label>\r\n                        <input\r\n                            className={this.state.changePasswordForm.oldPassword.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"oldPassword\"\r\n                            type=\"password\"\r\n                            value={this.state.changePasswordForm.oldPassword.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.changePasswordForm.oldPassword.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.changePasswordForm.newPasswordCheck.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                                Новий пароль:</label>\r\n                        <input\r\n                            className={this.state.changePasswordForm.newPasswordCheck.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"newPasswordCheck\"\r\n                            type=\"password\"\r\n                            value={this.state.changePasswordForm.newPasswordCheck.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.changePasswordForm.newPasswordCheck.message}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label\r\n                            className={this.state.changePasswordForm.newPassword.isValid ? \"control-label input-label\" : \"control-label input-label invalid-label\"}>\r\n                                Новий пароль ще раз:</label>\r\n                        <input\r\n                            className={this.state.changePasswordForm.newPassword.isValid ? \"form-control my-input-field\" : \"form-control my-input-field is-invalid\"}\r\n                            name=\"newPassword\"\r\n                            type=\"password\"\r\n                            value={this.state.changePasswordForm.newPassword.value}\r\n                            onChange={this.inputChangeHandler}\r\n                        />\r\n                        <span className=\"form-text invalid-feedback\">{this.state.changePasswordForm.newPassword.message}</span>\r\n                    </div>\r\n                    \r\n                    <br/>\r\n                    <button className=\"btn btn-info my-button\" type=\"submit\" key=\"submit\">Сохранити</button>\r\n\r\n                    <button className=\" btn btn-danger my-button\" key='cancel' type=\"button\" onClick={this.props.history.goBack}>Отмена</button>\r\n\r\n                </form>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ChangePassword;","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport ErrorPage from '../components/ErrorPageDetail/ErrorPageDetail'\r\nimport Navbar from './Navbar'\r\nimport NavbarAdmin from './NavbarAdmin';\r\nimport NavbarUser from './NavbarUser';\r\nimport Login from '../containers/Login/Login'\r\nimport AdminMainPage from '../containers/AdminMainPage/AdminMainPage'\r\nimport MainPage from '../containers/MainPage/MainPage'\r\nimport Logout from '../containers/Logout/Logout'\r\nimport AddCustomer from '../containers/AddCustomer/AddCustomer'\r\nimport PrivateRoute from '../common/PrivateRoute'\r\nimport PrivateRouteAdmin from '../common/PrivateRouteAdmin'\r\nimport AddPart from '../containers/AddPart/AddPart'\r\nimport PartsPage from '../containers/PartsPage/PartsPage'\r\nimport PartList from '../containers/PartList/PartList'\r\nimport CustomerList from '../containers/CustomerList/CustomerList'\r\nimport CustomersPage from '../containers/CustomersPage/CustomersPage'\r\nimport NewOrder from '../containers/NewOrder/NewOrder'\r\nimport CarsPage from '../containers/CarsPage/CarsPage' \r\nimport AddCar from '../containers/AddCar/AddCar';\r\nimport CarList from '../containers/CarList/CarList';\r\nimport Order from '../containers/Order/Order';\r\nimport WorksPage from '../containers/WorksPage/WorksPage';\r\nimport AddWork from '../containers/AddWork/AddWork';\r\nimport WorkList from '../containers/WorkList/WorkList';\r\nimport AddCarPartToOrder from '../containers/AddCarPartToOrder/AddCarPartToOrder';\r\nimport OrderOpenOrClosed from '../containers/OrderOpenOrClosed/OrderOpenOrClosed';\r\nimport OrderList from '../containers/OrderList/OrderList';\r\nimport UsersPage from '../containers/UsersPage/UsersPage';\r\nimport AddUser from '../containers/AddUser/AddUser';\r\nimport UserList from '../containers/UsersList/UsersList';\r\nimport MyPage from '../containers/MyPage/MyPage';\r\nimport ChangePassword from '../containers/ChangePassword/ChangePassword';\r\n\r\n\r\nconst layout = () => {\r\n\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    return (\r\n        <div>\r\n\r\n                {localStorage.user ? ((user.role === 'ROLE_ADMIN') ? <NavbarAdmin user={user.name}/> :\r\n                <NavbarUser user={user.name}/>) :\r\n                <Navbar/>}\r\n                \r\n\r\n            <div className=\"page_content container\">\r\n                <Switch>\r\n                    {localStorage.user ? ((user.role === 'ROLE_ADMIN') ? <PrivateRouteAdmin path=\"/\" exact component={AdminMainPage}/> :\r\n                    <PrivateRoute path=\"/\" exact component={MainPage}/>) :\r\n                    <Route path=\"/\" exact component={Login}/>}\r\n\r\n                    <Route path=\"/login\" exact component={Login}/>\r\n                    <Route path=\"/logout\" exact component={Logout}/>\r\n                    \r\n                    <PrivateRoute path=\"/mainPage\" exact component={MainPage}/>\r\n\r\n                    <PrivateRouteAdmin path=\"/addPart\" exact component={AddPart}/>\r\n                    <PrivateRouteAdmin path=\"/editPart/:id\" exact component={AddPart}/>\r\n                    <PrivateRouteAdmin path=\"/partsPage\" exact component={PartsPage}/>\r\n                    <PrivateRouteAdmin path=\"/partsList\" exact component={PartList}/>\r\n                    <PrivateRoute path=\"/addParts/:id\" exact component={PartList}/>\r\n                    <PrivateRoute path=\"/addCarPartCout/:order/:part\" exact component={AddCarPartToOrder}/>\r\n\r\n\r\n                    <PrivateRoute path=\"/customerList\" exact component={CustomerList}/>\r\n                    <PrivateRoute path=\"/customerList/:car\" exact component={CustomerList}/>\r\n                    <PrivateRoute path=\"/customersPage\" exact component={CustomersPage}/>\r\n                    <PrivateRoute path=\"/newCustomer\" exact component={AddCustomer}/>\r\n                    <PrivateRouteAdmin path=\"/editCustomer/:id\" exact component={AddCustomer}/>\r\n                    <PrivateRoute path=\"/creatingCustomer/:car\" exact component={AddCustomer}/>  \r\n\r\n\r\n                    <PrivateRoute path=\"/newOrder\" exact component={NewOrder}/>\r\n                    <PrivateRoute path=\"/newOrder/:cust/:car\" exact component={NewOrder}/>\r\n                    <PrivateRoute path=\"/order/:id\" exact component={Order}/>\r\n                    <PrivateRoute path=\"/openOrder/:car/:cust\" exact component={OrderOpenOrClosed}/>\r\n                    <PrivateRoute path=\"/ordersOf/:state/:car/:cust\" exact component={OrderList}/>\r\n\r\n\r\n                    <PrivateRoute path=\"/carsPage\" exact component={CarsPage}/>\r\n                    <PrivateRoute path=\"/addCar\" exact component={AddCar}/>\r\n                    <PrivateRouteAdmin path=\"/editCar/:id\" exact component={AddCar}/>\r\n                    <PrivateRoute path=\"/carList\" exact component={CarList}/>\r\n                    <PrivateRoute path=\"/carList/:cust\" exact component={CarList}/>\r\n                    <PrivateRoute path=\"/creatingCar/:cust\" exact component={AddCar}/>\r\n\r\n\r\n                    <PrivateRouteAdmin path=\"/worksPage\" exact component={WorksPage}/>\r\n                    <PrivateRouteAdmin path=\"/addWork\" exact component={AddWork}/>\r\n                    <PrivateRouteAdmin path=\"/editWork/:id\" exact component={AddWork}/>\r\n                    <PrivateRouteAdmin path=\"/worksList\" exact component={WorkList}/>\r\n                    <PrivateRoute path=\"/addWorkToOrder/:id\" exact component={WorkList}/>\r\n\r\n\r\n                    <PrivateRouteAdmin path=\"/usersPage\" exact component={UsersPage}/>\r\n                    <PrivateRouteAdmin path=\"/addUser\" exact component={AddUser}/>\r\n                    <PrivateRouteAdmin path=\"/editUser/:id\" exact component={AddUser}/>\r\n                    <PrivateRouteAdmin path=\"/userList\" exact component={UserList}/>\r\n                    <PrivateRouteAdmin path=\"/changeUser/:id/:order\" exact component={UserList}/>\r\n\r\n\r\n                    <PrivateRoute path=\"/myPage\" exact component={MyPage}/>\r\n                    <PrivateRoute path=\"/changePassword\" exact component={ChangePassword}/>\r\n\r\n\r\n                    <Route render={() => (<ErrorPage text=\"There is no page for this URL\"/>)}/>\r\n                </Switch>\r\n            </div>\r\n\r\n            <footer style={ {textAlign: \"left\"}}><hr/> ©Imre</footer>        \r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n};\r\n\r\nexport default layout;","import React from 'react';\nimport ErrorPage from '../components/ErrorPageDetail/ErrorPageDetail.js';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch(error, info) {\n        // Display fallback UI\n        this.setState({ hasError: true,\n                        text : error.message\n                     });\n        // You can also log the error to an error reporting service\n       // logErrorToMyService(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <ErrorPage text={this.state.text}/>;\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\n// import {NotificationContainer} from \"react-notifications\";\n\n\nimport Layout from './common/Layout'\nimport ErrorBoundry from \"./common/ErrorBoundry\";\n\nconst app = () => (\n\n\n  <BrowserRouter>\n      <div className=\"App\">\n          <ErrorBoundry>\n              <Layout/>\n              {/* <NotificationContainer/> */}\n          </ErrorBoundry>\n      </div>\n  </BrowserRouter>\n);\n\n// class App extends React.Component {\n//     render() {\n//         return (\n//             <div>\n//                 <BrowserRouter>\n//                     <ErrorBoundry>\n//                         {/* <Layout/> */}\n//                         <NotificationContainer/>\n//                     </ErrorBoundry>\n//                 </BrowserRouter>\n//             </div>\n//         )    \n//     }\n// }\n\nexport default app;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\nimport axios from 'axios';\n\n\naxios.defaults.baseURL = 'http://192.168.1.32:3030/';\naxios.defaults.withCredentials = true;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// registerServiceWorker();\n"],"sourceRoot":""}